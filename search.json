[{"path":[]},{"path":"reviewr.thewileylab.org/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"reviewr.thewileylab.org/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"reviewr.thewileylab.org/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"reviewr.thewileylab.org/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"reviewr.thewileylab.org/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"reviewr.thewileylab.org/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"reviewr.thewileylab.org/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"reviewr.thewileylab.org/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"reviewr.thewileylab.org/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"reviewr.thewileylab.org/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"reviewr.thewileylab.org/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"reviewr.thewileylab.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"BSD 3-clause License","title":"BSD 3-clause License","text":"Copyright (c) 2020, Wiley Lab rights reserved. Redistribution use source binary forms, without modification, permitted provided following conditions met: Redistributions source code must retain copyright notice, list conditions following disclaimer. Redistributions binary form must reproduce copyright notice, list conditions following disclaimer documentation /materials provided distribution. Neither name copyright holder names contributors may used endorse promote products derived software without specific prior written permission. SOFTWARE PROVIDED COPYRIGHT HOLDERS CONTRIBUTORS “” EXPRESS IMPLIED WARRANTIES, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE DISCLAIMED. EVENT SHALL COPYRIGHT HOLDER CONTRIBUTORS LIABLE DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, CONSEQUENTIAL DAMAGES (INCLUDING, LIMITED , PROCUREMENT SUBSTITUTE GOODS SERVICES; LOSS USE, DATA, PROFITS; BUSINESS INTERRUPTION) HOWEVER CAUSED THEORY LIABILITY, WHETHER CONTRACT, STRICT LIABILITY, TORT (INCLUDING NEGLIGENCE OTHERWISE) ARISING WAY USE SOFTWARE, EVEN ADVISED POSSIBILITY DAMAGE.","code":""},{"path":"reviewr.thewileylab.org/articles/customize_support_new_data_model.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Support a New Data Model","text":"Currently, ReviewR capable displaying patient information databases conform MIMIC-III OMOP data models. However, recognize clinical data can stored variety different formats. Accordingly, ReviewR can extended display patient data additional data models. vignette organized two main sections focused mechanics data model support ReviewR add support new data models: ReviewR Data Model Support - Describes different data models supported ReviewR Adding Support New Data Model - add support new data model ReviewR","code":""},{"path":"reviewr.thewileylab.org/articles/customize_support_new_data_model.html","id":"reviewr-data-model-support","dir":"Articles","previous_headings":"","what":"ReviewR Data Model Support","title":"Support a New Data Model","text":"data model defines tables fields contained within database. definitions typically described schema file, provides full listing tables fields contained within database. ReviewR uses definitions stored data model schema file select appropriate set internal ReviewR functions display patient information presented “Chart Review” tab. ReviewR, functions referred “table functions,” responsible querying, formatting, downloading ultimately displaying patient information tables connected clinical database. special functions dynamically selected based data model detected connecting. order ReviewR display patient data stored data models, support must added. Developing support additional data models requires understanding two ReviewR’s mechanics: schema file required add support custom data models. Schema files must CSV formatted contain two columns: table field. columns must contain pairwise combination every table field target data model. Table functions must follow table function naming convention. components discussed sections follow.","code":""},{"path":"reviewr.thewileylab.org/articles/customize_support_new_data_model.html","id":"data-model-detection","dir":"Articles","previous_headings":"ReviewR Data Model Support","what":"Data Model Detection","title":"Support a New Data Model","text":"database connection established, ReviewR use connection information supplied database connection module interrogate connected database attempt determine data model data model version. ReviewR accomplishes task discovering table field names connected database comparing data model specifications built ReviewR package. built data model matching table/field combinations connected database identified currently connected data model. data model detection successful, ReviewR select appropriate table functions built package correspond detected data model display information stored database tables. Additionally, ReviewR calculates internal variable, called table_map used map table field combinations connected database back corresponding table fields detected data model specification. allows case insensitive matching data model specification connected database. however, ReviewR fails identify enough table field matches data models existing ReviewR support, data model detection fail, ReviewR unable display patient information connected database. error message presented upon connection, notifying . see list currently supported database specifications ReviewR, run: data frame 4 columns returned: data_model: data model name model_version: data model version schema information comes CSV files may built ReviewR package file_path: file path* data source *Note: data-raw file path available forking ReviewR repository GitHub.","code":"library(ReviewR) ReviewR::supported_data_models #> # A tibble: 12 × 4 #> # Groups:   file_path, data_model, model_version [12] #>    data_model model_version data               file_path                         #>    <chr>      <chr>         <list>             <chr>                             #>  1 mimic3     \"v1.4\"        <tibble [332 × 8]> data-raw/data_models/mimic3_v1.4… #>  2 mimic3     \"\"            <tibble [333 × 8]> data-raw/data_models/mimic3.csv   #>  3 omop       \"v4\"          <tibble [49 × 8]>  data-raw/data_models/omop_v4.csv  #>  4 omop       \"v5.0.1\"      <tibble [328 × 8]> data-raw/data_models/omop_v5.0.1… #>  5 omop       \"v5.1.0\"      <tibble [339 × 8]> data-raw/data_models/omop_v5.1.0… #>  6 omop       \"v5.1.1\"      <tibble [339 × 8]> data-raw/data_models/omop_v5.1.1… #>  7 omop       \"v5.2\"        <tibble [365 × 8]> data-raw/data_models/omop_v5.2_b… #>  8 omop       \"v5.2.0\"      <tibble [334 × 8]> data-raw/data_models/omop_v5.2.0… #>  9 omop       \"v5.2.2\"      <tibble [363 × 8]> data-raw/data_models/omop_v5.2.2… #> 10 omop       \"v5.3.0\"      <tibble [407 × 8]> data-raw/data_models/omop_v5.3.0… #> 11 omop       \"v5.3.1\"      <tibble [407 × 8]> data-raw/data_models/omop_v5.3.1… #> 12 omop       \"v6.0\"        <tibble [427 × 8]> data-raw/data_models/omop_v6.0.c…"},{"path":"reviewr.thewileylab.org/articles/customize_support_new_data_model.html","id":"schema-files","dir":"Articles","previous_headings":"ReviewR Data Model Support > Data Model Detection","what":"Schema Files","title":"Support a New Data Model","text":"Data model specifications provided schema files comma separated values (CSV) formatted files contain least two columns, table field, identify every field every table data model. using common data model, may available consortium define data model standards. obtained developer, files may include additional information beyond required table field designations. files may still used, additional descriptors ignored. schema file OMOP CDM v5.3.0 provided example: Table 1: OMOP v5.3.0 Schema obtained OHDSI Files can built ReviewR package, may identify additional data models display corresponding patient information.","code":""},{"path":"reviewr.thewileylab.org/articles/customize_support_new_data_model.html","id":"data-model-display","dir":"Articles","previous_headings":"ReviewR Data Model Support","what":"Data Model Display","title":"Support a New Data Model","text":"Displaying patient data data models made possible developing “table functions” incorporated ReviewR package namespace. Functions provide convenient way code table representations, can accept data model connection info ReviewR variables. Additionally necessary code required display data model tables exists one place easily modifiable place. Writing functions hard! Writing good functions takes lot practice. use ReviewR code base guide good function writing. Instead, take look https://r4ds..co.nz/functions.html information write good functions. Patient information tabsets “Chart Review” tab ReviewR generated table functions. ReviewR determined data model version user database, search appropriately named functions can used download display information contained within connected data model. table functions must named according specific naming convention. Two convenience functions included ReviewR assist developing required table functions data model: user_table user_field. functions allow table functions coded requesting desired table name schema file. ReviewR performs case insensitive matching appropriate table/field user’s connected data using table_map variable discussed previously. developing table functions ReviewR, two different types table functions must considered. first, table function responsible generating information “Patient Search” tab, contains demographic information every patient database. ReviewR terminology, referred “Patients” 1 table. example, OMOP data model, demographic information contained within “person” table. “Patients” table function used display information “Patient Search” tab take following form: retrieve “person” table user connected database, using table_map db_connection variables locate correct table securely access database, respectively. variables supplied ReviewR used arguments function. Additionally, column containing data model’s subject id (record id, patient id, person id, Medical Record Number, etc.) must renamed ‘ID’. OMOP data model, field coded ‘person_id’. Using user_field function, can locate field interest connected data supplying function : table_map variable, table know field exist , field ’d like retrieve. can transform column name ID using mutate function. informs ReviewR user selects ID column, information “Chart Review” Tab need filtered identifier selected column. second type table function responsible displaying clinical data depicted “Chart Review” tab. clinical data models, given table contain particular type patient information every patient data set. Thus, information tables must filtered singular subject, usually numeric identifier. addition table_map db_connection variables, “Subject Specific” 2 table functions must accept additional subject_id argument: function retrieve “condition occurrence” table connected database, filtered contain conditions pertain selected subject.","code":"omop_table_all_patients <- function(table_map, db_connection) {   user_table(table_map, db_connection, 'person') %>%      mutate(ID = user_field(table_map, 'person', 'person_id')) %>%      collect() } omop_table_condition_occurrence <- function(table_map, db_connection, subject_id) {   user_table(table_map, db_connection, 'person') %>%      filter(ID == subject_id) %>%      collect() }"},{"path":"reviewr.thewileylab.org/articles/customize_support_new_data_model.html","id":"table-function-naming-convention","dir":"Articles","previous_headings":"ReviewR Data Model Support > Data Model Display","what":"Table Function Naming Convention","title":"Support a New Data Model","text":"Table functions standard naming convention, allows associated currently detected data model. Functions used render patient tables must following format: {data-model-name}_table_{table-name}. start name data model (spaces, dashes, underscores allowed, though CamelCase acceptable) followed “_table” end name table like display (long table names may include underscores). last bit function name become label tabset “Chart Review” tab ReviewR. developing table functions particular data model, must exactly 1 function codes “Patients” table (function name ending ’_all_patients’) number additional “Subject Specific” table functions. example, say like add support PCORnet data model ReviewR. added schema file PCORnet version like support, create “patients” table function 1 “subject specific” table functions. PCORnet, patient demographic information stored “DEMOGRAPHICS” table, irrelevant function name ultimately connect table. appropriate name “patients” table function : PCORnet_table_all_patients. function contain code connects “DEMOGRAPHICS” table, used display patient list “Patient Search” tab ReviewR. Additional “subject specific” table functions need created display information “Chart Review” tab ReviewR. example, appropriate name “ENCOUNTER” table function : PCORnet_table_ENCOUNTER. add tabset “Chart Review” tab ReviewR label “Encounter.” naming convention ensures ReviewR detects PCORnet database connected, functions beginning PCORnet_table_ available display patient information. table functions created data model, functions developed displayed tabs Chart Review section ReviewR new data model detected.","code":""},{"path":"reviewr.thewileylab.org/articles/customize_support_new_data_model.html","id":"adding-support-for-a-new-data-model","dir":"Articles","previous_headings":"","what":"Adding Support for a New Data Model","title":"Support a New Data Model","text":"ReviewR developed package utilizing golem framework. Essentially, means Shiny application organized way major application features provided functions. functions disambiguated functions R package library exported ReviewR package’s namespace. also helps ReviewR access functionality packages namespace imports. advantages approach include ease distribution, providing inline application documentation, providing reasonable expectation installation/deployment success across different operating systems server environments. learn package namespaces, please see: https://r-pkgs.org/namespace.html however introduce additional caveats development process. main caveat aware developing ReviewR changes made ReviewR’s code immediately reflected next time application launched. reasons fairly technical, root issue new changes must explicitly added package namespace. Golem provides function update necessary documentation load development changes since last save active R session, new changes code can tested without rebuild install time change made. making code modifications, simply run golem::document_and_reload() make new changes available next time application launched. additional information developing R Shiny application golem, please see: https://engineering-shiny.org/index.html","code":""},{"path":"reviewr.thewileylab.org/articles/customize_support_new_data_model.html","id":"getting-started","dir":"Articles","previous_headings":"Adding Support for a New Data Model","what":"Getting Started","title":"Support a New Data Model","text":"First ensure access latest development tools file structure ReviewR package, fork ReviewR GitHub. simplicity, home directory specified destination directory: Please see guide trouble connecting RStudio Git. also possible fork repository directly GitHub else fails. IMPORTANT: think like contribute data model support ReviewR project, start new branch hold development work. However, changes use custom data model widespread use cases, feel free perform development work using default branch. Navigate forked repository open ReviewR.Rproj file. open project RStudio. Finally, using devtools package run: now ready begin developing support new data model.","code":"# install.packages('usethis') usethis::create_from_github(repo_spec = 'thewileylab/ReviewR', destdir = '~/') # install.packages('devtools') devtools::load_all()"},{"path":"reviewr.thewileylab.org/articles/customize_support_new_data_model.html","id":"required-information","dir":"Articles","previous_headings":"Adding Support for a New Data Model","what":"Required Information","title":"Support a New Data Model","text":"begin, either obtain create schema file data model like support. stated previously, file must CSV formatted contain two columns labeled table field. contents file pairwise combination every table/field target data model.","code":""},{"path":"reviewr.thewileylab.org/articles/customize_support_new_data_model.html","id":"how-to-add-a-new-data-model","dir":"Articles","previous_headings":"Adding Support for a New Data Model","what":"How to Add a New Data Model","title":"Support a New Data Model","text":"convenience function built ReviewR assist task adding support additional data models: dev_add_data_model(). function accepts single argument, path schema file local machine. function intended development purposes, , must run appending 3 colons (:::) package name, following example: run, function process information stored specified schema file prompt basic information pertaining data model attempting add support . first prompt encounter identify table contains listing patients. listing every table schema file presented viewer pane RStudio browse locate table containing requested information. Enter number corresponds correct table console press return proceed. Next, asked field contains patient identifier schema file. listing distinct fields presented viewer pane. Locate desired field enter numeric representation console, followed return. point, function information needs add basic support data model ReviewR. schema file automatically added list supported data models R file containing pre populated table functions open basic table representations coded. point, may want customize representation table liking. data model simple, table stands , ie. contain relational information, done! Save changes table function file run: incorporate new data model support ReviewR. however data model relational, OMOP (others) may additional work . important note dev_add_data_model function create skeleton function every table contained within schema CSV file. often appropriate relational databases, certain tables contain actual patient information, rather hold information data stored tables. OMOP, seen often concept table. concept table, likely table ’d like display ReviewR, need manually removed resulting table functions file generated dev_add_data_model. However, almost every table OMOP data model require join concept table order access patient information. Therefore, table functions need modified make appropriate joins concept table. example: add human readable representation subjects gender ‘person’ table, rather numeric concept stored “person” table. additional information OMOP data model, please consult OHDSI OMOP website. developing, important aware relationships appropriate joins can made correctly display information properly user. Tables contain relational information need displayed Chart Review Tab, table function skeletons created dev function may safely removed.","code":"ReviewR:::dev_add_data_model(csv = 'path/to/schema/file.csv') golem::document_and_reload() omop_table_all_patients <- function(table_map, db_connection) {   user_table(table_map, db_connection, 'person') %>%      mutate(ID = user_field(table_map, 'person', 'person_id')) %>%      left_join(user_table(table_map, db_connection, 'person'),                by=setNames(user_field(table_map, 'person', 'gender_concept_id'), user_field(table_map, 'concept', 'concept_id'))               ) %>%      collect() }"},{"path":"reviewr.thewileylab.org/articles/customize_support_new_data_model.html","id":"developingtesting","dir":"Articles","previous_headings":"Adding Support for a New Data Model","what":"Developing/Testing","title":"Support a New Data Model","text":"making modifications template provided dev_add_data_model, feel free select(), filter(), mutate(), otherwise modify appearance patient data displays want look Chart Review tab. dplyr package declared import table function skeleton, many dplyr manipulations may included development. Please leave collect() part dplyr chain added, data needs downloaded ReviewR order displayed. ready test table functions within ReviewR, run: incorporate newly developed functions active R Session launch application can connect database view new data model within ReviewR. Remember, change table functions run golem::document_and_reload()","code":"golem::document_and_reload() ReviewR::run_app()"},{"path":"reviewr.thewileylab.org/articles/customize_support_new_data_model.html","id":"finishing-up","dir":"Articles","previous_headings":"Adding Support for a New Data Model","what":"Finishing up","title":"Support a New Data Model","text":"satisfied table functions sufficiently tested functionality, run: install new, custom version ReviewR package newly incorporated data model supporting table functions. developed support additional data model using vignette, like contribute ReviewR project, ask please consider submitting work pull request. Please follow excellent pull request guide like contribute modifications ReviewR package: https://usethis.r-lib.org/articles/articles/pr-functions.html","code":"devtools::install()"},{"path":"reviewr.thewileylab.org/articles/customize_support_new_rdbms.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Support a New Relational Database Management System","text":"ReviewR manages database connections help DBI dbplyr packages RStudio. Leveraging packages, ReviewR able operate remote databases local, -memory data frames. R code written dplyr verbs automatically translated SQL dbplyr package sent connected database. translation connected database handled DBI connection object, references database driver. full list dplyr compatible database back-ends can found .","code":""},{"path":"reviewr.thewileylab.org/articles/customize_support_new_rdbms.html","id":"database-modules","dir":"Articles","previous_headings":"Overview","what":"Database Modules","title":"Support a New Relational Database Management System","text":"ReviewR facilitates DBI connections use Shiny Modules. Modules can make complex Shiny applications manageable. compartmentalize code developed specific purpose. core, modules monitor user inputs defined User Interface (UI) function, process inputs server function, return output. module operates namespace, meaning Shiny modules portable can used applications reused within application. ReviewR, concept used create “database modules.” patient database back-end different connection requirements, meaning new UI needed collect required connection information user. modularizing connection code, ReviewR can support multiple databases long correctly formatted DBI connection object returned ReviewR application. Thus “database modules” Shiny modules responsible collecting appropriate database credentials (IP address, port, etc.) returning DBI connection object. ReviewR dynamically switches developed database modules database setup module. setup module allows users interactively switch database modules developed. selected, individual module’s UI presented guide user establishing database connection.  Users can extend functionality ReviewR adding developed database modules “Database Module Setup” code chunk within R/mod_database_setup.R shown : modules added database setup, appear Patient Database Module drop setup tab. Read learn develop database module ReviewR!","code":"# Database Module Setup ----       namespace <- 'db-selector-ns'       # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Add Database Setup Modules Here!!! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #       ## Add Database Setup Modules Here       database_setup_vars <- reactiveValues(bigquery = bigquery_setup_server(id = namespace ),                                             postgresql = postgresql_setup_server(id = namespace ) #,                                             # new_module = new_module_setup_server(id = namespace)                                             )       # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #"},{"path":"reviewr.thewileylab.org/articles/customize_support_new_rdbms.html","id":"developing-a-database-module-for-reviewr","dir":"Articles","previous_headings":"","what":"Developing a Database Module for ReviewR","title":"Support a New Relational Database Management System","text":"Creating Shiny module similar developing stand alone Shiny Application. developing database module ReviewR, differences result package architecture. template provided aspects ReviewR database module development can highlighted sections follow. familiar Shiny modules want begin developing right away, may skip ahead Start Developing Section guide.","code":""},{"path":"reviewr.thewileylab.org/articles/customize_support_new_rdbms.html","id":"getting-started","dir":"Articles","previous_headings":"Developing a Database Module for ReviewR","what":"Getting Started","title":"Support a New Relational Database Management System","text":"first step developing new ReviewR module fork latest version ReviewR GitHub. Forking repository allow experiment ReviewR package ensures access latest development tools file structure ReviewR package. simplicity, home directory specified destination directory: Please see guide trouble connecting RStudio Git. also possible fork repository directly GitHub else fails. Navigate forked repository open ReviewR.Rproj file. open project RStudio. Finally, using devtools package run: load recent version ReviewR. point, ready begin developing database module.","code":"# install.packages('usethis') usethis::create_from_github(repo_spec = 'thewileylab/ReviewR', destdir = '~/') # install.packages('devtools') devtools::load_all()"},{"path":"reviewr.thewileylab.org/articles/customize_support_new_rdbms.html","id":"start-developing","dir":"Articles","previous_headings":"Developing a Database Module for ReviewR","what":"Start Developing!","title":"Support a New Relational Database Management System","text":"helper function, dev_database_module(), provided ReviewR help jump start database module development process. function accepts 2 arguments: mod_name - internal variable ReviewR uses keep track return values module, including DBI connection object. display_name - variable “choice” presented users Setup tab, sure descriptive recognizable! ready, run: create module file R/ directory ReviewR package open editing.","code":"ReviewR:::dev_database_module(mod_name = 'your_module', display_name = 'Your Module Display Name')"},{"path":"reviewr.thewileylab.org/articles/customize_support_new_rdbms.html","id":"general-module-structure","dir":"Articles","previous_headings":"Developing a Database Module for ReviewR","what":"General Module Structure","title":"Support a New Relational Database Management System","text":"Take note ReviewR Database Module Template. consists 2 functions: {mod_name}_setup_ui - Defines user interface guide someone database connection process {mod_name}_setup_server - Defines actions take result user inputs. ReviewR utilizes moduleServer() function introduced Shiny 1.5. allows server portion module called within application just like function, instead relying previous callModule() syntax. next thing note ReviewR modules ultimately become part ReviewR package namespace. means UI Server functions require roxygen comments, function parameters, returns, necessary package imports declared. additional information module development, please see: https://shiny.posit.co/r/articles/improve/modules/","code":""},{"path":"reviewr.thewileylab.org/articles/customize_support_new_rdbms.html","id":"requirements","dir":"Articles","previous_headings":"Developing a Database Module for ReviewR","what":"Requirements","title":"Support a New Relational Database Management System","text":"UI function defined {module_name}_setup_ui accepts single parameter (id) moduleName = ‘{Database Module Name}’ moduleType = ‘database’ setup_ui = ReviewR::{module_name}_setup_ui is_connected = ‘’ db_con = NULL","code":""},{"path":"reviewr.thewileylab.org/articles/customize_support_new_rdbms.html","id":"ui-function","dir":"Articles","previous_headings":"Developing a Database Module for ReviewR > Requirements","what":"UI Function","title":"Support a New Relational Database Management System","text":"Begin adding Shiny Widgets tagList() portion UI function database module. Users interact widgets enter database credentials. Consider adding “Connect” “Disconnect” button UI can monitored server function store user entered credentials combine DBI connection object. Specifics vary database. Remember wrap user inputID’s ns() function, inherit module namespace.","code":"tagList(   actionButton(inputId = ns('connect'),label = 'connect'),   actionButton(inputId = ns('disconnect'),label = 'disconnect')   )"},{"path":"reviewr.thewileylab.org/articles/customize_support_new_rdbms.html","id":"example-connect-server-logic","dir":"Articles","previous_headings":"Developing a Database Module for ReviewR > Requirements","what":"Example ‘Connect’ Server Logic","title":"Support a New Relational Database Management System","text":"mentioned previously, entire goal ReviewR database module construct DBI connection object user entered information. DBI connection object needs assigned db_con reactive values object, say user clicks button labeled ‘connect’. However, user entered information validated. Consider following pseudo code: database setup module ReviewR ‘observing’ return currently selected database module. is_connected variable changes ‘yes’, knows valid connection information present, can begin working connected database.","code":"library(shiny) ## Observe a connect button, defined in the UI function observeEvent(input$connect, {   ## When the button is pressed, store a temporary connection   temp_con <- DBI::dbConnect(drv = database_driver(),                              user = input$username, ## A text input, with a username                              pass = input$password ## A password input                              )   ## Design a test to validate the temporary connection object   test_result <- connection_test(temp_con)      ## If the test passes, update the reactiveValues objects for the `is_connected` and `db_con` variables   if(test_result == TRUE) {     database_export$is_connected <- 'yes'     database_export$db_con <- temp_con     ## Else, don't create connection info   } else {     database_export$is_connected <- 'no'   } }) ## Let ReviewR handle the rest!"},{"path":"reviewr.thewileylab.org/articles/customize_support_new_rdbms.html","id":"example-disconnect-server-logic","dir":"Articles","previous_headings":"Developing a Database Module for ReviewR > Requirements","what":"Example ‘Disconnect’ Server Logic","title":"Support a New Relational Database Management System","text":"Database modules also responsible clearing connection information user wants disconnect. simple example database disconnect user presses ‘disconnect’ button:","code":"## Observe a connect button, defined in the UI function observeEvent(input$disconnect, (   ## Tell the database you are disconnecting   DBI::dbDisconnect(database_export$db_con)   ## Clear the connection info   database_export$db_con <- NULL   ## Set `is_connected` variable back to 'no'   database_export$is_connected <- 'no' ))"},{"path":"reviewr.thewileylab.org/articles/customize_support_new_rdbms.html","id":"other-considerations","dir":"Articles","previous_headings":"Developing a Database Module for ReviewR > Requirements","what":"Other Considerations","title":"Support a New Relational Database Management System","text":"Think users interacting module. button clicked, notice changes processed? error message displayed incorrect credentials entered? connected, “connection success” message presented?","code":""},{"path":"reviewr.thewileylab.org/articles/customize_support_new_rdbms.html","id":"important","dir":"Articles","previous_headings":"Developing a Database Module for ReviewR > Requirements","what":"Important","title":"Support a New Relational Database Management System","text":"developing/testing, remember add completed setup_server function R/mod_database_setup.R. required module display within ReviewR. incorporated ReviewR, moduleName parameter database module’s reactiveValues appears Database Module Selector drop list. sure added module mod_database_setup.R ready test, run: incorporate newly developed module ReviewR namespace, allowing see changes made result development process.","code":"golem::document_and_reload()"},{"path":"reviewr.thewileylab.org/articles/customize_support_new_rdbms.html","id":"finishing-up","dir":"Articles","previous_headings":"Developing a Database Module for ReviewR","what":"Finishing up","title":"Support a New Relational Database Management System","text":"satisfied module sufficiently tested functionality, run: install new, custom version ReviewR package newly developed module incorporated.","code":"devtools::install()"},{"path":"reviewr.thewileylab.org/articles/customize_support_new_rdbms.html","id":"reviewr-database-module-template","dir":"Articles","previous_headings":"Developing a Database Module for ReviewR","what":"ReviewR Database Module Template","title":"Support a New Relational Database Management System","text":"","code":"# UI ---- #' {display_name} Setup UI #' #' This module is designed to guide a user through the process of authenticating your database #'  #' @param id The module namespace #'  #' @return The {display_name} Setup UI #'  #' @importFrom shiny NS #' {mod_name}_setup_ui <- function(id) {    ns <- NS(id)   tagList(   ## UI widgets here ----          )   }  # Server ---- #' {display_name} Setup Server #' #' @param id The Module namespace #' #' @return {display_name} connection variables #' @export #' #' @importFrom DBI dbConnect #'  {mod_name}_setup_server <- function(id) {   moduleServer(     id,     function(input, output, session) {       ns <- session$ns       ## {mod_name} Export Values ----       {mod_name}_export <- reactiveValues(         ### Module Info         moduleName = '{display_name}',         moduleType = 'database',         setup_ui = ReviewR::{mod_name}_setup_ui,         is_connected = 'no',                db_con = NULL         )       # Server Code Here ----                     # Return ----       return({mod_name}_export)     }   ) }"},{"path":"reviewr.thewileylab.org/articles/deploy_bigquery.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Google BigQuery Deployment","text":"order protect privacy, Google specific requirements connecting allowing applications access data. requirements mean things know, server deployments extra setup steps required, projects connecting Google BigQuery.","code":""},{"path":"reviewr.thewileylab.org/articles/deploy_bigquery.html","id":"local-deployment","dir":"Articles","previous_headings":"","what":"Local Deployment","title":"Google BigQuery Deployment","text":"package uses internal resources owned “ReviewR” project Google Cloud Platform. can see full privacy policy handle data (briefly, collect aggregate usage information, none data sets revealed accessible us). terms acceptable , configuration required! However, prefer authorize ReviewR may bring OAuth clientID Google Cloud Project choice. obtain use Google API credentials: https://console.cloud.google.com/ Within project created step 1, head APIs & Services > Credentials top, click Create credentials > OAuth client ID Optionally, provide name Desktop client Click Create Save file “client_secret.json” ~/.bq_client_id Unix based systems $HOMEPATH$/.bq_client_id/client_secret.json Windows. launch, ReviewR check path defined step 3 client_secret.json file. found, use credentials instead Wiley Lab credentials built package. Additionally, may also run ReviewR::run_app(secrets_json = '/path//client_secret.json') prefer store file elsewhere.","code":""},{"path":"reviewr.thewileylab.org/articles/deploy_bigquery.html","id":"server-deployment","dir":"Articles","previous_headings":"","what":"Server Deployment","title":"Google BigQuery Deployment","text":"using ReviewR Shiny Server deployment intend connect data stored Google BigQuery must obtain Google API credentials. Otherwise, authentication fail Google unable determine redirect authenticated users. ReviewR installed accessible server secured fully qualified domain name: https://console.cloud.google.com/ Within project created step 1, head APIs & Services > Credentials top, click Create credentials > OAuth client ID Optionally, provide name web application client Add https URL shiny server ReviewR installation Authorized redirect URIs section eg: https://.shinyserver.url/ReviewR Click Create Save file “client_secret.json” /srv/shiny-server/.bq_client_id ReviewR already installed, simply refresh browser window. Additional Reading: (https://gargle.r-lib.org/articles/get-api-credentials.html#get--google-cloud-platform-project-1)","code":""},{"path":"reviewr.thewileylab.org/articles/deploy_docker.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Docker Deployment","text":"ReviewR containerized! Users less familiar R, like avoid potential conflicts existing packages services, simply want manage R Environment may wish utilize containerized version ReviewR. Dockerfile may obtained ReviewR package build, run, deploy ReviewR local server environment.","code":""},{"path":[]},{"path":"reviewr.thewileylab.org/articles/deploy_docker.html","id":"install-docker-desktop","dir":"Articles","previous_headings":"Docker Desktop","what":"Install Docker Desktop","title":"Docker Deployment","text":"Install version Docker Desktop appropriate operating system. Downloads configuration instructions may obtained following link: https://docs.docker.com/desktop/","code":""},{"path":[]},{"path":"reviewr.thewileylab.org/articles/deploy_docker.html","id":"download","dir":"Articles","previous_headings":"Docker Desktop > Run ReviewR from Docker","what":"Download","title":"Docker Deployment","text":"Docker Desktop installed operating system need obtain ReviewR source code. Open R console fork ReviewR repository usethis package: step fork recent version ReviewR package GitHub working directory includes additional files development tools built directly package. includes Dockerfile used create ReviewR container. R available system using, package source may also obtained via following URL: https://github.com/thewileylab/ReviewR/archive/master.zip","code":"# install.packages('usethis') usethis::create_from_github(repo_spec = 'thewileylab/ReviewR')"},{"path":"reviewr.thewileylab.org/articles/deploy_docker.html","id":"build-reviewr","dir":"Articles","previous_headings":"Docker Desktop > Run ReviewR from Docker","what":"Build ReviewR","title":"Docker Deployment","text":"Using command line operating system, navigate location containing forked repository. example, Dockerfile reside ReviewR folder within working directory previous section. grab dependencies ReviewR requires internet build Docker image system. may take , grab cup coffee… possibly meal.","code":"cd ReviewR docker build -t reviewr ."},{"path":"reviewr.thewileylab.org/articles/deploy_docker.html","id":"run-reviewr","dir":"Articles","previous_headings":"Docker Desktop > Run ReviewR from Docker","what":"Run ReviewR","title":"Docker Deployment","text":"Docker image created, ready run ReviewR local system: ’s ! ReviewR can now accessed browser http://localhost:1410.","code":"docker run --publish 1410:1410 --detach --name ReviewR reviewr:latest"},{"path":"reviewr.thewileylab.org/articles/deploy_docker.html","id":"server","dir":"Articles","previous_headings":"","what":"Server","title":"Docker Deployment","text":"wish support multiple concurrent users, ReviewR may also hosted server running Docker. guide help install Docker, start Shiny Server container, serve ReviewR application securely NGINX. following guide server systems running Ubuntu 18.04. Docker installation instructions adapted : https://www.digitalocean.com/community/tutorials/--install--use-docker--ubuntu-18-04","code":""},{"path":[]},{"path":"reviewr.thewileylab.org/articles/deploy_docker.html","id":"prerequisites","dir":"Articles","previous_headings":"Server > Docker Installation","what":"Prerequisites","title":"Docker Deployment","text":"order make sure latest version Docker installed, add Docker’s official repository software manger server. begin, SSH system run: install software packages required add Docker repository system. Next, ’ll add GPG key official Docker repository system. GPG key helps ensure repository serving legitimate software https connection. add key, run: Finally, can add Docker repository system: Docker repository added, can now install Docker Community Edition server:","code":"sudo apt update sudo apt install apt-transport-https ca-certificates curl software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable\" sudo apt update sudo apt install docker-ce"},{"path":"reviewr.thewileylab.org/articles/deploy_docker.html","id":"docker-configuration-optional","dir":"Articles","previous_headings":"Server > Docker Installation","what":"Docker Configuration (Optional)","title":"Docker Deployment","text":"first installed, docker commands can run root user. Depending configuration, may desirable behavior. like able run Docker commands normal user, additional configuration required. First, ’ll need add active user “docker” group system. can accomplished running: order group membership take effect, ’ll log system log back . instead, ’d like run docker commands different user system (active user), simply specify user rather using ${USER} variable previous command: Docker now configured!","code":"sudo usermod -aG docker ${USER} sudo usermod -aG docker adeline"},{"path":"reviewr.thewileylab.org/articles/deploy_docker.html","id":"build-shiny-server-container","dir":"Articles","previous_headings":"Server","what":"Build Shiny Server Container","title":"Docker Deployment","text":"order facilitate multiple concurrent users, Shiny Server container need built, including dependencies ReviewR requires. docker already installed, build suitable Docker image using Dockerfile contained ReviewR source. begin process, need make directory hold ReviewR application: Next, clone ReviewR source GitHub: R installed, can fork ReviewR package R console usethis package: Otherwise, clone GitHub using git commands bash terminal: Finally, build Shiny Server container using Dockerfile contained ReviewR repository: Take quick break container image built. deserve ! image finished building, can start container: Shiny Server container start begin serving applications located ~/srv/shinyapps directory system. ReviewR cloned directory now accessible via web : http://server.ip.address:3838/ReviewR order securely host container URL, ’ll need configure NGINX reverse proxy container Let’s Encrypt Certificate. Read see .","code":"mkdir -p ~/srv/shinyapps # install.packages('usethis') usethis::create_from_github(repo_spec = 'thewileylab/ReviewR', destdir = '~/srv/shinyapps') cd ~/srv/shinyapps git clone https://github.com/thewileylab/ReviewR cd ~/srv/shinyapps/ReviewR/Docker_ShinyServer docker build -t shiny-server_reviewr . docker run -d -p 3838:3838 \\     -v ~/srv/shinyapps/:/srv/shiny-server/ \\     -v ~/srv/shinylog/:/var/log/shiny-server/ \\     shiny-server_reviewr:latest"},{"path":"reviewr.thewileylab.org/articles/deploy_docker.html","id":"configuring-nginx-to-reverse-proxy-reviewr-docker-container","dir":"Articles","previous_headings":"","what":"Configuring NGINX to Reverse Proxy ReviewR Docker Container","title":"Docker Deployment","text":"serve ReviewR Docker container NGINX, simply need add enable server block, secure Certbot software install configure certificate Let’s Encrypt. information obtain domain install NGINX, Certbot please see vignette('deploy_server').","code":""},{"path":"reviewr.thewileylab.org/articles/deploy_docker.html","id":"configure-nginx","dir":"Articles","previous_headings":"Configuring NGINX to Reverse Proxy ReviewR Docker Container","what":"Configure nginx","title":"Docker Deployment","text":"Next, need configure NGINX proxy traffic web clients Docker Container. accomplish , ’ll need add server block NGINX information container. NGINX server blocks live /etc/nginx/sites-available/. initialize server block container, issue following command: Modify following server block code replacing shiny..domain.url domain name . , copy text file editing. example, sub domain “shiny” prepended server domain, though specific configuration may vary. Save exit file. Verify created successfully running: file called “shiny-server_reviewr” among files returned. Next, need enable server block just created. NGINX, accomplished symlinking server block /etc/nginx/sites-enabled folder. Run: point, Shiny Server accessible http://shiny..domain.url/ReviewR . ReviewR Docker Container immediately available domain completing steps point, may restart NGINX; sudo systemctl reload nginx Continue next section secure access container Let’s Encrypt.","code":"## substitute nano for your preferred text editor: emacs, jed, joe, pico, sandy, vi, vim, etc. sudo nano /etc/nginx/sites-available/shiny-server_reviewr server {   server_name   shiny.your.domain.url;    location / {     proxy_pass  http://localhost:3838;   } } ls -l /etc/nginx/sites-available sudo ln -s /etc/nginx/sites-available/shiny-server_reviewr /etc/nginx/sites-enabled/shiny-server_reviewr"},{"path":"reviewr.thewileylab.org/articles/deploy_docker.html","id":"securing-docker-container-with-lets-encrypt","dir":"Articles","previous_headings":"Configuring NGINX to Reverse Proxy ReviewR Docker Container","what":"Securing Docker Container with Let’s Encrypt","title":"Docker Deployment","text":"portion guide assumes already installed Certbot system following instructions vignette('deploy_server'). already configured server block container previous section, ready run Certbot software secure domain. Run following code block, substituting shiny..domain.url domain configured nginx server block ReviewR container: first time running Certbot, prompted enter email address agree terms service. , Certbot initiate connection Let’s Encrypt server begin testing server verify control domain ’re requesting certificate . Certbot ask whether ’d like redirect HTTP traffic HTTPS traffic. highly recommended . Please select option ‘Redirect’, ensure users capable accessing site via secure HTTPS. Congratulations, ReviewR container now secured ready accessed securely via https://reviewr..domain.url !","code":"sudo certbot --nginx -d shiny.your.domain.url"},{"path":"reviewr.thewileylab.org/articles/deploy_local.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Local Deployment","text":"like perform chart review local computer (.e., using server), want explore demo database follow instructions local deployment.","code":""},{"path":"reviewr.thewileylab.org/articles/deploy_local.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Local Deployment","text":"First ensure library devtools installed. , please install using: install latest development release ReviewR using:","code":"install.packages('devtools') devtools::install_github('thewileylab/ReviewR')"},{"path":"reviewr.thewileylab.org/articles/deploy_local.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Local Deployment","text":"installing ReviewR, application can launched running:","code":"ReviewR::run_app()"},{"path":"reviewr.thewileylab.org/articles/deploy_server.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Shiny Server Deployment","text":"ReviewR designed support multiple concurrent users deployed using Shiny Server. deployed centralized server instance ReviewR served connecting user distinct R sessions allowing multiple participants simultaneously connect patient data submit chart abstraction information. server deployments, users access ReviewR directly web browser without requiring local R installation.","code":""},{"path":"reviewr.thewileylab.org/articles/deploy_server.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"Shiny Server Deployment","text":"deploying ReviewR server, must first configure environment securely host Shiny applications. overall process consists 5 main components: Obtain domain Shiny Server Setup Configuring NGINX Reverse Proxy Shiny Server Securing Shiny Server URL Let’s Encrypt Deploy ReviewR Note: vignette assumes access server running Ubuntu 18.04.","code":""},{"path":"reviewr.thewileylab.org/articles/deploy_server.html","id":"disclaimer","dir":"Articles","previous_headings":"Getting Started","what":"Disclaimer","title":"Shiny Server Deployment","text":"guide universally applicable server environments. assumes prior services installed configured server. intended informational purposes . take responsibility suggesting configuration changes break operational setup. Please make modifications necessary adapt guide specific environment consult department applicable necessary. Information provided vignette adapted guides listed Suggested Reading section .","code":""},{"path":"reviewr.thewileylab.org/articles/deploy_server.html","id":"suggested-reading","dir":"Articles","previous_headings":"Getting Started","what":"Suggested Reading","title":"Shiny Server Deployment","text":"Shiny Server: Quick Start Guide Shiny Server: Running Proxy Let’s Encrypt Getting Started Secure NGINX Let’s Encrypt","code":""},{"path":"reviewr.thewileylab.org/articles/deploy_server.html","id":"obtain-a-domain","dir":"Articles","previous_headings":"","what":"Obtain a Domain","title":"Shiny Server Deployment","text":"Using domain registrar choosing, obtain domain name server. wide variety registrars provide domain name either free charge small annual fee. obtained domain name server, register server’s external IP address domain registrar choice. Ideally, external IP address static, though services exist update DNS records servers ephemeral IP addresses. registered domain name linked domain server’s IP able access server plain text URL, rather IP address. Additionally, domain required encrypt connections /server. certificate authorities, like Let’s Encrypt, required verify ownership domains security certificates can issued. certificates allows traffic SSL encrypted clients server via https standard. registering server’s IP address domain registrar associating domain name, verifying site take responsibility functions.","code":""},{"path":[]},{"path":"reviewr.thewileylab.org/articles/deploy_server.html","id":"install-shiny-server-dependencies","dir":"Articles","previous_headings":"Shiny Server Setup","what":"Install Shiny Server Dependencies","title":"Shiny Server Deployment","text":"installing Shiny Server, necessary install prerequisites server. begin, SSH server perform following steps: Install R: Install R Shiny System R Package Library: Install gdebi, operating system package used install Shiny Server, additional dependencies:","code":"sudo apt-get install r-base sudo su - \\ -c \"R -e \\\"install.packages('shiny', repos='https://cran.rstudio.com/')\\\"\" sudo apt-get install gdebi-core"},{"path":"reviewr.thewileylab.org/articles/deploy_server.html","id":"install-shiny-server","dir":"Articles","previous_headings":"Shiny Server Setup","what":"Install Shiny Server","title":"Shiny Server Deployment","text":"Now prerequisites satisfied, download install Shiny Server system: point, bare bones basic Shiny Server Installation. like verify Shiny installed correctly, may attempt connection different machine network visiting: .server.ip_address:3838 Read learn secure connection.","code":"wget https://download3.rstudio.org/ubuntu-18.04/x86_64/shiny-server-1.5.20.1002-amd64.deb sudo gdebi shiny-server-1.5.20.1002-amd64.deb"},{"path":"reviewr.thewileylab.org/articles/deploy_server.html","id":"configuring-nginx-to-reverse-proxy-shiny-server","dir":"Articles","previous_headings":"","what":"Configuring NGINX to Reverse Proxy Shiny Server","title":"Shiny Server Deployment","text":"stage, Server hosted port 3838 machine. order allow users access server via domain acquired first portion guide, need install configure reverse proxy direct clients securely applications hosted shiny server. NGINX, open source web server reverse proxy used purposes guide.","code":""},{"path":"reviewr.thewileylab.org/articles/deploy_server.html","id":"install-nginx","dir":"Articles","previous_headings":"Configuring NGINX to Reverse Proxy Shiny Server","what":"Install NGINX","title":"Shiny Server Deployment","text":"begin, install NGINX server: can verify installation visiting .server.ip_address different machine network. see ’Welcome nginx!” message successful. Depending server hosted, may allow access server’s IP address ports 80 443. Firewall configuration outside scope guide.","code":"sudo apt update sudo apt install nginx"},{"path":"reviewr.thewileylab.org/articles/deploy_server.html","id":"configure-nginx-for-use-with-shiny-server","dir":"Articles","previous_headings":"Configuring NGINX to Reverse Proxy Shiny Server","what":"Configure NGINX for use with Shiny Server","title":"Shiny Server Deployment","text":"Next, need configure NGINX proxy traffic web clients Shiny Server, Shiny applications hosted. , ’ll need add server block NGINX information Shiny Server. NGINX server blocks live /etc/nginx/sites-available/. initialize server block shiny server, issue following command: Modify following server block code replacing .shiny.server.url domain name obtained Obtain Domain section guide. , copy text file editing. Save exit file. Verify created successfully running: file called “shiny” among files returned. Next, need enable server block just created. NGINX, accomplished symlinking server block /etc/nginx/sites-enabled folder. Run: point, Shiny Server accessible http://.shiny.server.url . Shiny Server immediately available domain completing steps point, may restart NGINX; sudo systemctl reload nginx Continue next section secure server Let’s Encrypt.","code":"## substitute nano for your preferred text editor: emacs, jed, joe, pico, sandy, vi, vim, etc. sudo nano /etc/nginx/sites-available/shiny server {          server_name your.shiny.server.url;          location / {                 proxy_pass http://localhost:3838;                 proxy_redirect / $scheme://$http_host/;                 proxy_http_version 1.1;                 proxy_set_header Upgrade $http_upgrade;                 proxy_set_header Connection $connection_upgrade;                 proxy_read_timeout 20d;                 proxy_buffering off;         } ls -l /etc/nginx/sites-available sudo ln -s /etc/nginx/sites-available/shiny /etc/nginx/sites-enabled/shiny"},{"path":"reviewr.thewileylab.org/articles/deploy_server.html","id":"securing-shiny-server-url-with-lets-encrypt","dir":"Articles","previous_headings":"","what":"Securing Shiny Server URL with Let’s Encrypt","title":"Shiny Server Deployment","text":"begin, install Certbot software server. software makes easy secure domain, automatically verifying ownership, downloading installing Let’s Encrypt certificate, automatically configuring nginx use certificate, renewing certificate expires. want software, trust . install Certbot, ’ll need add software repository system. accomplished running: Next, ’ll need update server’s package list, install Certbot application nginx configuration: already configured server block NGINX previous section, ready run Certbot software secure domain. Run following code block, substituting .shiny.server.url domain configured nginx server block shiny server: first time running Certbot, prompted enter email address agree terms service. , Certbot initiate connection Let’s Encrypt server begin testing server verify control domain ’re requesting certificate . Certbot ask whether ’d like redirect HTTP traffic HTTPS traffic. highly recommended . Please select option ‘Redirect’, ensure users capable accessing site via secure HTTPS. Congratulations, Shiny Server now secured ready begin hosting Shiny Applications. Continue next section learn deploy ReviewR Shiny Server.","code":"sudo add-apt-repository ppa:certbot/certbot sudo apt update sudo apt install python-certbot-nginx sudo certbot --nginx -d your.shiny.server.url"},{"path":"reviewr.thewileylab.org/articles/deploy_server.html","id":"deploy-reviewr","dir":"Articles","previous_headings":"","what":"Deploy ReviewR","title":"Shiny Server Deployment","text":"Install ReviewR package root user order ensure system R package library required dependencies bash terminal, run: open interactive R console root user R console opens, run: Continuing root user, fork ReviewR repository Shiny Server directory (/srv/shiny-server) usethis package. Using R console : step fork recent version ReviewR package GitHub includes additional files development tools built directly package. includes app.R file Shiny Server need deploy ReviewR. default, Shiny Server host applications placed /srv/shiny-server ’s ! ReviewR can now accessed browser : https://.shiny.server.url/ReviewR","code":"# Start R in an interactive root terminal sudo -i R # install.packages('devtools') devtools::install_github('thewileylab/ReviewR') # install.packages('usethis') usethis::create_from_github(repo_spec = 'thewileylab/ReviewR', destdir = '/srv/shiny-server')"},{"path":[]},{"path":[]},{"path":"reviewr.thewileylab.org/articles/privacy-policy.html","id":"accessing-user-data","dir":"Articles","previous_headings":"Privacy > Google account and user data","what":"Accessing user data","title":"Privacy Policy for ReviewR","text":"ReviewR package allow access interact Google resources local computer/server communicating directly Google APIs read data. can happen authenticate specific Google account, authorize actions, provide package token confirming authorization. help access token guiding OAuth flow browser. part process must consent allow “ReviewR” operate behalf. OAuth consent screen tell exact “scope” (see ) authorized (.e., API/s requested whether authorizing “read ” “read write” access.). Wiley Lab never receives data permission access data. However can see anonymous, aggregated information usage tokens obtained OAuth client, including APIs endpoints accessed/configured. reminder, prefer authorize ReviewR may bring OAuth clientID Google Cloud Project choice.","code":""},{"path":"reviewr.thewileylab.org/articles/privacy-policy.html","id":"scopes","dir":"Articles","previous_headings":"Privacy > Google account and user data","what":"Scopes","title":"Privacy Policy for ReviewR","text":"Overview scopes requested ReviewR rationale: userinfo.email (read ): Allows ReviewR display email address associated connected user. userinfo.profile (read ): Allows ReviewR display name associated connected user. bigquery.readonly: Allows ReviewR retrieve metadata projects, datasets tables, query download data stored Google BigQuery allowed existing IAM permissions. devstorage.read_only: Allows ReviewR download Google BigQuery results allowed existing IAM permissions.","code":""},{"path":"reviewr.thewileylab.org/articles/privacy-policy.html","id":"sharing-user-data","dir":"Articles","previous_headings":"Privacy > Google account and user data","what":"Sharing user data","title":"Privacy Policy for ReviewR","text":"ReviewR communicate Google APIs. user data shared Wiley Lab.","code":""},{"path":"reviewr.thewileylab.org/articles/privacy-policy.html","id":"storing-user-data","dir":"Articles","previous_headings":"Privacy > Google account and user data","what":"Storing user data","title":"Privacy Policy for ReviewR","text":"ReviewR store credentials local machine designed used multi-user environments. Authentication must performed login.","code":""},{"path":"reviewr.thewileylab.org/articles/privacy-policy.html","id":"policies-for-authors-of-packages-or-other-applications","dir":"Articles","previous_headings":"","what":"Policies for authors of packages or other applications","title":"Privacy Policy for ReviewR","text":"use API key client ID ReviewR Wiley Lab project external package tool. Per Google User Data Policy https://developers.google.com/terms/api-services-user-data-policy, application must accurately represent authenticating Google API services. deploy package server environment must supply ClientID. use credentials Wiley Lab able redirect users server’s domain; instead, use credentials associated project user.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_record_database.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"Connect to Patient Record Database","text":"Launch ReviewR application running ReviewR::run_app() R console visiting URL Shiny Server deployed instance ReviewR browser. launch, ReviewR show Homepage, provide basic information ReviewR package. ready begin using ReviewR select “Setup” option navigation menu left side application. Setup section divided 2 columns, Connect Patient Database Configure Patient Chart Abstraction.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_record_database.html","id":"connect-to-patient-database","dir":"Articles","previous_headings":"","what":"Connect to Patient Database","title":"Connect to Patient Record Database","text":"ReviewR supports multiple database systems. listing available database modules displayed drop menu, located section: Select available database modules. Select database module like connect .","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_record_database.html","id":"google-bigquery","dir":"Articles","previous_headings":"Connect to Patient Database","what":"Google BigQuery","title":"Connect to Patient Record Database","text":"connecting Google BigQuery, simply click “Sign Google”. See Google BigQuery Deployment information. successfully authenticated Google can select associated Google Cloud projects BigQuery data sets available within selected project. selected data set wish review, click “Connect”.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_record_database.html","id":"postgresql","dir":"Articles","previous_headings":"Connect to Patient Database","what":"PostgreSQL","title":"Connect to Patient Record Database","text":"connecting PostgreSQL prompted configuration information database (database name, hostname, port) well login information (username password) click “Connect”.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_record_database.html","id":"demo-sqlite-database","dir":"Articles","previous_headings":"Connect to Patient Database","what":"Demo SQLite Database","title":"Connect to Patient Record Database","text":"simply like try ReviewR without connecting data can select “Demo SQLite” database module click “Connect”. demo database contains simulated patient data CMS Synthetic Public Use File (SynPUF) MTSamples databases.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_record_database.html","id":"other-relational-database-systems","dir":"Articles","previous_headings":"Connect to Patient Database","what":"Other Relational Database Systems","title":"Connect to Patient Record Database","text":"like connect ReviewR dataset stored different relational database system, see Support New Relational Database Management System vignette.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_record_database.html","id":"data-model-detection","dir":"Articles","previous_headings":"","what":"Data Model Detection","title":"Connect to Patient Record Database","text":"required database credentials provided, database setup module create connection database attempt identify data model patient data stored database. connection information detected data model shown successful connection pane: Successful connection database supported data model. event data model determined, ReviewR notify following error message, indicating data model support add particular patient dataset. Error connecting database unsupported data model. See Support Custom Data Model vignette learn add support particular dataset.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_record_database.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"Connect to Patient Record Database","text":"ReviewR now ready view patient information contained within database. like configure chart abstraction using REDCap, please see Connect REDCap vignette. Otherwise can learn review patient charts Perform Chart Review vignette.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_redcap.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"Connect to REDCap","text":"order save information individual records review, want connect ReviewR REDCap. Please note requires access REDCap institution set approved REDCap project access API key.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_redcap.html","id":"create-a-redcap-project","dir":"Articles","previous_headings":"","what":"Create a REDCap Project","title":"Connect to REDCap","text":"begin, create REDCap project institution’s REDCap instance. Add users like able access project, ensure permissions include: Data Export Tool: Full Data Set API: Import API: Export Create Records users added permissions set, users log project, request API access project. user require API key access abstraction functionality ReviewR.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_redcap.html","id":"design-redcap-instruments","dir":"Articles","previous_headings":"","what":"Design REDCap Instrument(s)","title":"Connect to REDCap","text":"project initialized users added API keys provisioned, ’ll design instrument REDCap project. institution resources help teach complete step. considerations know compatibility ReviewR.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_redcap.html","id":"required-field-to-include","dir":"Articles","previous_headings":"Design REDCap Instrument(s)","what":"Required Field to Include","title":"Connect to REDCap","text":"order link review individual chart reviewed need include field capture record identifier (e.g., stable identifier associated unique record/patient data set). required field created “Text Box (Short Text, Number, Data/Time, …” data type REDCap.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_redcap.html","id":"suggested-field-to-include","dir":"Articles","previous_headings":"Design REDCap Instrument(s)","what":"Suggested Field to Include","title":"Connect to REDCap","text":"Optionally, may also want record performs review. “Reviewer” identifier required use ReviewR. However wish record performed review, please create field “Text Box (Short Text, Number, Data/Time, …” data type REDCap. configure REDCap ReviewR ability enter reviewer’s name select previous reviewers submitted data project.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_redcap.html","id":"supported-instrument-types","dir":"Articles","previous_headings":"Design REDCap Instrument(s)","what":"Supported Instrument Types","title":"Connect to REDCap","text":"ReviewR supports projects either single multiple instruments. time ReviewR support longitudinal repeating instruments, support instruments use conditional logic.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_redcap.html","id":"supported-field-types","dir":"Articles","previous_headings":"Design REDCap Instrument(s)","what":"Supported Field Types","title":"Connect to REDCap","text":"designing instrument/s use ReviewR, please include supported field types. Currently, ReviewR supports following REDCap project field types:","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_redcap.html","id":"connect-and-configure-redcap-in-reviewr","dir":"Articles","previous_headings":"","what":"Connect and Configure REDCap in ReviewR","title":"Connect to REDCap","text":"set REDCap project defined , ready connect ReviewR. Load ReviewR either visiting institution’s deployed URL, running ReviewR::run_app() local R installation. Head setup tab connect patient data, using “Connect Patient Database” pane (see Connect Patient Record Database) vignette ).","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_redcap.html","id":"connect-to-redcap-project","dir":"Articles","previous_headings":"Connect and Configure REDCap in ReviewR","what":"Connect to REDCap Project","title":"Connect to REDCap","text":"now ready connect REDCap. “Configure Patient Chart Abstraction” pane, select “REDCap” Abstraction Module drop . Next, enter institution’s REDCap API URL, REDCap API key created REDCap project. Add REDCap Connection information. entering information, click “Connect REDCap” button. Note connect button appear URL API key supplied. connection successful, information connected project displayed including: REDCap Project ID Project creation date Production status","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_redcap.html","id":"configure-redcap","dir":"Articles","previous_headings":"Connect and Configure REDCap in ReviewR","what":"Configure REDCap","title":"Connect to REDCap","text":"successful connection made REDCap project ‘Configure REDCap’ dialogue appear. select REDCap Question hold patient identifier. Additionally, configured REDCap project, select field contain reviewer information. One fields set, ReviewR see information entered project. previous information found reviewer associated, populate drop reviewers may selected. Select available reviewers. Add new reviewer. Review selections configured","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_redcap.html","id":"disconnectreconfigure","dir":"Articles","previous_headings":"","what":"Disconnect/Reconfigure","title":"Connect to REDCap","text":"point setup process, may click “Disconnect” connect different REDCap project, “Reconfigure REDCap” set new configuration options.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_connect_to_redcap.html","id":"next-step","dir":"Articles","previous_headings":"","what":"Next Step","title":"Connect to REDCap","text":"ReviewR now ready view record information connected database. information perform chart review, please see Perform Chart Review vignette .","code":""},{"path":"reviewr.thewileylab.org/articles/usage_perform_chart_review.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"Perform A Chart Review","text":"First make sure : ReviewR installed. (See Local Deployment Shiny Server Deployment vignettes .) connected record database. (See Connect Patient Record Database vignette .) connected REDCap. (See Connect REDCap vignette .) steps complete, ready perform chart review.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_perform_chart_review.html","id":"patient-search","dir":"Articles","previous_headings":"","what":"Patient Search","title":"Perform A Chart Review","text":"Begin opening ‘Patient Search’ section identifying patient review. locate particular patient may search available fields entering search term box top column, search globally across columns utilizing search box upper right. right columns indicate review status individual connected dataset. review subjects upload information REDCap, project users complete reviews, columns update indicating current review status subject. selected patient interest, click subject ID, highlighted blue leftmost column, taken ‘Chart Review’ page. Patient Tab displaying 50 person subset CMS 2008-2010 Data Entrepreneurs’ Synthetic Public Use File (DE-SynPUF) OHDSI.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_perform_chart_review.html","id":"chart-review","dir":"Articles","previous_headings":"","what":"Chart Review","title":"Perform A Chart Review","text":"Clicking subject ID ‘Patient Search’ page automatically redirect ‘Chart Review’ portion ReviewR. , greeted screen similar : ReviewR Chart Review: Everything’s Shiny, Cap’n. fret. Note ‘Chart Review’ page divided roughly 4 quadrants, discussed .","code":""},{"path":"reviewr.thewileylab.org/articles/usage_perform_chart_review.html","id":"subject-header","dir":"Articles","previous_headings":"Chart Review","what":"Subject Header","title":"Perform A Chart Review","text":"Subject header contains demographic information selected subject takes upper left portion ‘Chart Review’ page. information extracted directly ‘Patient Chart’ page give quick reference demographic information patient. configured, review status also available pane. saved review status particular subject context appear next subject ID visual indicator: “Review Started (blank)” - Status yet assigned. “Incomplete (red)” - questions answered, required question left unanswered. “Unverified (yellow)” - Questions answered, require additional review. “Complete (green)” - required questions selected instrument answered. status assigned reviewers appear right column demographic information subject header.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_perform_chart_review.html","id":"jump-to-subject-id","dir":"Articles","previous_headings":"Chart Review","what":"Jump to Subject ID","title":"Perform A Chart Review","text":"dropdown contains listing subjects connected dataset, along review status assigned, present. allows review subjects order.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_perform_chart_review.html","id":"patient-chart","dir":"Articles","previous_headings":"Chart Review","what":"Patient Chart","title":"Perform A Chart Review","text":"patient chart occupies lower left portion screen. tabbed panel contains patient tables defined particular data model. Access table clicking tab top pane. Search within table fields entering search term regular expression string search box located top table column. may also enter ‘global search’ term box located upper right portion pane. Global search applies search string regex every field every connected table, highlights results found.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_perform_chart_review.html","id":"redcap-instrument","dir":"Articles","previous_headings":"Chart Review","what":"REDCap Instrument","title":"Perform A Chart Review","text":"REDCap Instrument section ‘Chart Review’ page information selected subject may captured. top pane instrument selector. drop allows user select configured instruments connected REDCap project. Take look instrument added fields hold subject ID reviewer ID. Note fields automatically populated currently selected subject currently configured reviewer, respectively. values may modified manually. Additionally, configured fields REDCap project rendered, native Shiny controls. Field notes rendered Shiny widget, along indicator required question types. happen include field type yet supported, placeholder message rendered, indicating field type may used. REDCap web, form status may set subject/instrument included REDCap Project. See Subject Header section overview supported statuses. save responses, click ‘Save REDCap’ button. notification appear indicating data saved successfully modal detailing potential conflicts attempting overwrite existing REDCap data.","code":""},{"path":"reviewr.thewileylab.org/articles/usage_perform_chart_review.html","id":"keyboard-navigation","dir":"Articles","previous_headings":"","what":"Keyboard Navigation","title":"Perform A Chart Review","text":"order speed manual record review process ReviewR, keybindings added common review tasks: “Meta + Ctrl + >” : Navigate next subject “Meta + Ctrl + <” : Navigate previous subject “Meta + Ctrl + s” : Save currently entered abstraction information Note: Meta refers command key (⌘) macOS Alt key windows/unix based systems","code":""},{"path":"reviewr.thewileylab.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Laura Wiley. Author. Luke Rasmussen. Author. David Mayer. Maintainer, author. . Copyright holder, funder.","code":""},{"path":"reviewr.thewileylab.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mayer DA, Rasmussen LV, Roark CD, G.Kahn M, Schilling LM, Wiley LK (2022). “ReviewR: light-weight extensible tool manual review clinical records.” JAMIA open, 5(3), ooac071. doi:10.1093/jamiaopen/ooac071.","code":"@Article{,   title = {ReviewR: A light-weight and extensible tool for manual review of clinical records},   author = {David A. Mayer and Luke V. Rasmussen and Christopher D. Roark and Michael G.Kahn and Lisa M. Schilling and Laura K. Wiley},   journal = {JAMIA open},   year = {2022},   volume = {5},   number = {3},   pages = {ooac071},   doi = {https://doi.org/10.1093/jamiaopen/ooac071}, }"},{"path":[]},{"path":"reviewr.thewileylab.org/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"A Light-Weight, Portable Tool for Reviewing Individual Patient Records","text":"ReviewR portable Shiny tool help explore patient-level electronic health record data perform chart review single integrated framework. distributed R package using golem framework. tool supports browsing clinical data many different formats including multiple versions OMOP common data model well MIMIC-III data model. using different data format, ReviewR can easily customized support use case (see Support Custom Data Model vignette). present ReviewR supports data stored Google BigQuery Postgres, although can easily customized access database supported dbplyr (see Support New Relational Database Management System vignette). record chart review data, ReviewR supports connections REDCap (Research Electronic Data Capture). Full documentation available reviewr.thewileylab.org.","code":""},{"path":"reviewr.thewileylab.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Light-Weight, Portable Tool for Reviewing Individual Patient Records","text":"Install ReviewR CRAN:","code":"install.packages('ReviewR')"},{"path":"reviewr.thewileylab.org/index.html","id":"development","dir":"","previous_headings":"Installation","what":"Development","title":"A Light-Weight, Portable Tool for Reviewing Individual Patient Records","text":"First ensure library devtools installed. , please install using: install latest development release ReviewR using:","code":"install.packages('devtools') devtools::install_github('thewileylab/ReviewR')"},{"path":"reviewr.thewileylab.org/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"A Light-Weight, Portable Tool for Reviewing Individual Patient Records","text":"run application local computer simply run: like deploy ReviewR server, see Shiny Server Deployment vignette. connecting clinical data using Google BigQuery please see Google BigQuery Deployment vignette.","code":"ReviewR::run_app()"},{"path":"reviewr.thewileylab.org/index.html","id":"explore-clinical-data","dir":"","previous_headings":"Usage","what":"Explore Clinical Data","title":"A Light-Weight, Portable Tool for Reviewing Individual Patient Records","text":"app loaded, please navigate ‘Setup’ tab (found left navigation menu). First, left panel, select type database like connect (e.g., Google BigQuery). may also choose select Demo SQLite module access synthetic clinical data order explore ReviewR works without connecting database. BigQuery connections, simply press “Sign Google” redirected authenticate Google return application. successfully connected patient database, navigate ‘Patient Search’ tab, located left sidebar. tab can see basic demographic information patient record. Select particular patient ID like view ‘Chart Review’ tab open. top left panel includes demographic information found ‘Patient Search’ table, bottom panel contains clinical information available record tabs different data types. can filter individual column typing text box beneath column name, can search across columns using search bar upper right corner panel. Note regular text well regular expression based searches supported. like move another patient can use patient navigation panel upper right corner. can navigate specific patient using dropdown selector simply move next previous patient records using buttons.","code":""},{"path":"reviewr.thewileylab.org/index.html","id":"perform-chart-review","dir":"","previous_headings":"Usage","what":"Perform Chart Review","title":"A Light-Weight, Portable Tool for Reviewing Individual Patient Records","text":"app loaded, please navigate ‘Setup’ tab (found left navigation menu). setup tab, enter institution’s REDCap URL API token REDCap project. project may contain multiple REDCap instruments data collection selectable Setup interface. connected, please select REDCap field contains patient information well field contain reviewer information. Enter name keep track completed review. First, left panel, select type database like connect (e.g., Google BigQuery). may also choose select Demo SQLite module access synthetic clinical data order explore ReviewR works without connecting database. BigQuery connections, simply press “Sign Google” redirected authenticate Google return application. Next, want connect REDCap project store results chart review. right panel ‘Setup’ tab, enter institution’s REDCap URL API token desired REDCap project click ‘Connect REDCap’. Next, configure REDCap instrument selecting variable collection instrument store Patient ID value, ReviewR automatically populate question chart viewing. also want record performing chart review can configure question identifies chart reviewer enter name can also auto-entered review session. want record reviewer identifier just select ‘(Applicable)’. completed selects click ‘Configure REDCap Instrument’. Congratulations - ready perform chart review! can now navigate ‘Patient Search’ tab, located left sidebar. tab can see basic demographic information patient record well review status record (e.g., “Review Started”, “Complete”, etc.). enabled support multiple reviewers, review status reviewers provided addition status configured reviewer. Select particular patient ID like view ‘Chart Review’ tab open. top left panel includes demographic review status information found ‘Patient Search’ table, bottom left panel contains clinical information available record tabs different data types. can filter individual column typing text box beneath column name, can search across columns using search bar upper right corner panel. Note regular text well regular expression based searches supported. Chart review data can entered middle right panel. panel contains questions REDCap project. project multiple instruments, use drop select instrument like use. ’ll notice questions identifying patient reviewer identifier pre-filled editable. finished entry record, set REDCap status lower right panel click ‘Save REDCap’. must click ‘Save REDCap’ data saved app uploaded REDCap! like move another patient can use patient navigation panel upper right corner. can navigate specific patient using dropdown selector simply move next previous patient records using buttons.","code":""},{"path":"reviewr.thewileylab.org/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"A Light-Weight, Portable Tool for Reviewing Individual Patient Records","text":"Please note tool designed secure local computer server environment, check clinical data warehouse /departments make sure authorized use tool real patient data. make guarantee security privacy.","code":""},{"path":"reviewr.thewileylab.org/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"A Light-Weight, Portable Tool for Reviewing Individual Patient Records","text":"encounter bugs, errors, issues general unpleasantness, please let us know GitHub.","code":""},{"path":"reviewr.thewileylab.org/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"A Light-Weight, Portable Tool for Reviewing Individual Patient Records","text":"Please note ReviewR project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"reviewr.thewileylab.org/reference/ReviewR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ReviewR: A Light-Weight, Portable Tool for Reviewing Individual Patient Records — ReviewR-package","title":"ReviewR: A Light-Weight, Portable Tool for Reviewing Individual Patient Records — ReviewR-package","text":"portable Shiny tool explore patient-level electronic health record data perform chart review single integrated framework. tool supports browsing clinical data many different formats including multiple versions 'OMOP' common data model well 'MIMIC-III' data model. addition, chart review information captured stored securely via Shiny interface 'REDCap' (Research Electronic Data Capture) project using 'REDCap' API. See 'ReviewR' website additional information, documentation, examples.","code":""},{"path":[]},{"path":"reviewr.thewileylab.org/reference/ReviewR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ReviewR: A Light-Weight, Portable Tool for Reviewing Individual Patient Records — ReviewR-package","text":"Maintainer: David Mayer david.mayer@cuanschutz.edu (ORCID) Authors: Laura Wiley laura.wiley@cuanschutz.edu (ORCID) Luke Rasmussen luke.rasmussen@northwestern.edu (ORCID) contributors: Wiley Lab [copyright holder, funder]","code":""},{"path":"reviewr.thewileylab.org/reference/chart_review.html","id":null,"dir":"Reference","previous_headings":"","what":"ReviewR Chart Review Tab — chart_review","title":"ReviewR Chart Review Tab — chart_review","text":"function contains elements control layout Chart Review Tab.","code":""},{"path":"reviewr.thewileylab.org/reference/chart_review.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ReviewR Chart Review Tab — chart_review","text":"","code":"chart_review()"},{"path":"reviewr.thewileylab.org/reference/chart_review.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ReviewR Chart Review Tab — chart_review","text":"shiny::renderUI Output containing Chart Review Tab","code":""},{"path":[]},{"path":"reviewr.thewileylab.org/reference/db_function_all_patients_table_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Database Table Function: All Patients Table Template — db_function_all_patients_table_template","title":"Database Table Function: All Patients Table Template — db_function_all_patients_table_template","text":"character vector containing function template creating 'Patients' table displayed \"Patient Search\" Tab","code":""},{"path":"reviewr.thewileylab.org/reference/db_function_all_patients_table_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Database Table Function: All Patients Table Template — db_function_all_patients_table_template","text":"","code":"db_function_all_patients_table_template"},{"path":"reviewr.thewileylab.org/reference/db_function_all_patients_table_template.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Database Table Function: All Patients Table Template — db_function_all_patients_table_template","text":"character vector 22 elements","code":""},{"path":[]},{"path":"reviewr.thewileylab.org/reference/db_function_subject_table_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Database Table Function: Subject Table Template — db_function_subject_table_template","title":"Database Table Function: Subject Table Template — db_function_subject_table_template","text":"character vector containing function template creating 'Subject Filtered' tables displayed \"Chart Review\" Tab","code":""},{"path":"reviewr.thewileylab.org/reference/db_function_subject_table_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Database Table Function: Subject Table Template — db_function_subject_table_template","text":"","code":"db_function_subject_table_template"},{"path":"reviewr.thewileylab.org/reference/db_function_subject_table_template.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Database Table Function: Subject Table Template — db_function_subject_table_template","text":"character vector 15 elements","code":""},{"path":[]},{"path":"reviewr.thewileylab.org/reference/db_module_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Database Module Template — db_module_template","title":"Database Module Template — db_module_template","text":"character vector containing database module template","code":""},{"path":"reviewr.thewileylab.org/reference/db_module_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Database Module Template — db_module_template","text":"","code":"db_module_template"},{"path":"reviewr.thewileylab.org/reference/db_module_template.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Database Module Template — db_module_template","text":"character vector 52 elements","code":""},{"path":[]},{"path":"reviewr.thewileylab.org/reference/dev_add_data_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Develop Data Model Table Functions — dev_add_data_model","title":"Develop Data Model Table Functions — dev_add_data_model","text":"function assist adding support new data model ReviewR. schema file, supplied CSV, added package namespace upon connection database containing new data model, ReviewR can identify display database detection module. Users prompted identify table new data model contains list patients. Additionally, users asked select field uniquely identifies patient. field must present across tables new data model best results. selections captured, database_tables.R file populated opened editing RStudio. Basic table skeletons created based provided schema user selections. Note: identifier field present across tables, care must taken adjust database_tables.R file appropriately represent new data model structure.","code":""},{"path":"reviewr.thewileylab.org/reference/dev_add_data_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Develop Data Model Table Functions — dev_add_data_model","text":"","code":"dev_add_data_model(csv)"},{"path":"reviewr.thewileylab.org/reference/dev_add_data_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Develop Data Model Table Functions — dev_add_data_model","text":"csv Required. file path CSV file containing data model schema","code":""},{"path":"reviewr.thewileylab.org/reference/dev_add_data_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Develop Data Model Table Functions — dev_add_data_model","text":".R file populated basic database table functions","code":""},{"path":[]},{"path":"reviewr.thewileylab.org/reference/dev_add_database_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Develop A Database Module — dev_add_database_module","title":"Develop A Database Module — dev_add_database_module","text":"function create database module skeleton required elements already populated, based user inputs. Common database module packages imported automatically, developers add imports roxygen skeleton necessary UI server functions collect user info create DBI connection object, respectively.","code":""},{"path":"reviewr.thewileylab.org/reference/dev_add_database_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Develop A Database Module — dev_add_database_module","text":"","code":"dev_add_database_module(mod_name = NULL, display_name = NULL)"},{"path":"reviewr.thewileylab.org/reference/dev_add_database_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Develop A Database Module — dev_add_database_module","text":"mod_name Required. string, denoting module suffix eg: 'mariadb' display_name Required. string, denoting module display name eg: 'MariaDB Server'. 'user viewable' name appear database module selector dropdown.","code":""},{"path":"reviewr.thewileylab.org/reference/dev_add_database_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Develop A Database Module — dev_add_database_module","text":".R file populated database module skeleton","code":""},{"path":[]},{"path":"reviewr.thewileylab.org/reference/dt_2_viewer.html","id":null,"dir":"Reference","previous_headings":"","what":"DT to Viewer — dt_2_viewer","title":"DT to Viewer — dt_2_viewer","text":"Save temporary DT::datatable self contained HTML file display RStudio Viewer Pane. Used provided users choices prompted action dev function.","code":""},{"path":"reviewr.thewileylab.org/reference/dt_2_viewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DT to Viewer — dt_2_viewer","text":"","code":"dt_2_viewer(.data, file = NULL)"},{"path":"reviewr.thewileylab.org/reference/dt_2_viewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DT to Viewer — dt_2_viewer","text":".data dplyr::tibble containing desired data save file Optional. Manually define file path (.html extension) HTML representation DT","code":""},{"path":"reviewr.thewileylab.org/reference/dt_2_viewer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DT to Viewer — dt_2_viewer","text":"function returns temporary HTML file displayed RStudio Viewer Pane","code":""},{"path":"reviewr.thewileylab.org/reference/get_concept.html","id":null,"dir":"Reference","previous_headings":"","what":"OMOP Get Concept — get_concept","title":"OMOP Get Concept — get_concept","text":"function assists transforming OMOP concept_ids interpretable strings retrieving requested concepts appropriate OMOP concept table.","code":""},{"path":"reviewr.thewileylab.org/reference/get_concept.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OMOP Get Concept — get_concept","text":"","code":"get_concept(   table_map,   db_connection,   concept_table,   concept_id,   concept_name,   table,   joinable_id,   table_concept_id,   col_name,   subject_id_field = NULL,   selected_subject = NULL )"},{"path":"reviewr.thewileylab.org/reference/get_concept.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OMOP Get Concept — get_concept","text":"table_map dplyr::tibble containing mapping CDM standard tables fields user connected tables fields. db_connection DBI::dbConnect object. concept_table string, containing standard CDM concept table name. concept_id string, containing standard CDM concept id field. concept_name string, containing standard CDM concept name field. table string, containing table name requires OMOP concepts. joinable_id string, indicating variable \"joinable\" concept table desired table. table_concept_id string, containing table concept id col_name string, containing desired name retrieved concept. subject_id_field string, identifying table field contains subject id. selected_subject numeric, coercible numeric containing desired subject id.","code":""},{"path":"reviewr.thewileylab.org/reference/get_concept.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OMOP Get Concept — get_concept","text":"desired OMOP concept based user data model subjects","code":""},{"path":"reviewr.thewileylab.org/reference/homepage.html","id":null,"dir":"Reference","previous_headings":"","what":"ReviewR Homepage Tab — homepage","title":"ReviewR Homepage Tab — homepage","text":"function contains elements control layout Homepage Tab.","code":""},{"path":"reviewr.thewileylab.org/reference/homepage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ReviewR Homepage Tab — homepage","text":"","code":"homepage()"},{"path":"reviewr.thewileylab.org/reference/homepage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ReviewR Homepage Tab — homepage","text":"shiny::renderUI Output containing Homepage Tab","code":""},{"path":[]},{"path":"reviewr.thewileylab.org/reference/internal-assets.html","id":null,"dir":"Reference","previous_headings":"","what":"Installed App — installed_app","title":"Installed App — installed_app","text":"Invisibly returns OAuth app.","code":""},{"path":"reviewr.thewileylab.org/reference/internal-assets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Installed App — installed_app","text":"","code":"installed_app()"},{"path":"reviewr.thewileylab.org/reference/internal-assets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Installed App — installed_app","text":"Invisible OAuth consumer application, produced httr::oauth_app()","code":""},{"path":"reviewr.thewileylab.org/reference/mimic3_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"MIMIC-III Tables — mimic3_tables","title":"MIMIC-III Tables — mimic3_tables","text":"collection functions create prearranged views MIMIC-III patient data supplied database connection information mapping connected database.","code":""},{"path":"reviewr.thewileylab.org/reference/mimic3_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MIMIC-III Tables — mimic3_tables","text":"","code":"mimic3_table_all_patients(table_map, db_connection)  mimic3_table_admissions(table_map, db_connection, subject_id)  mimic3_table_callout(table_map, db_connection, subject_id)  mimic3_table_chart_events(table_map, db_connection, subject_id)  mimic3_table_cpt_events(table_map, db_connection, subject_id)  mimic3_table_diagnoses_icd(table_map, db_connection, subject_id)  mimic3_table_drg_codes(table_map, db_connection, subject_id)  mimic3_table_icu_stays(table_map, db_connection, subject_id)  mimic3_table_lab_events(table_map, db_connection, subject_id)  mimic3_table_microbiology_events(table_map, db_connection, subject_id)  mimic3_table_note_events(table_map, db_connection, subject_id)  mimic3_table_prescriptions(table_map, db_connection, subject_id)  mimic3_table_procedure_events(table_map, db_connection, subject_id)  mimic3_table_procedures_icd(table_map, db_connection, subject_id)  mimic3_table_services(table_map, db_connection, subject_id)  mimic3_table_transfers(table_map, db_connection, subject_id)"},{"path":"reviewr.thewileylab.org/reference/mimic3_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MIMIC-III Tables — mimic3_tables","text":"table_map dplyr::tibble containing mapping CDM standard tables fields user connected tables fields. db_connection DBI::dbConnect object. subject_id numeric, coercible numeric.","code":""},{"path":"reviewr.thewileylab.org/reference/mimic3_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MIMIC-III Tables — mimic3_tables","text":"dplyr::tibble containing pre-coordinated patient information connected database.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_abstraction_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstraction Module Selector — mod_abstraction_setup","title":"Abstraction Module Selector — mod_abstraction_setup","text":"module allows user select available ReviewR abstraction module dropdown list. dynamically returns abstraction setup instrument user interfaces well collected chart abstraction information selected module. module consists following components:","code":""},{"path":"reviewr.thewileylab.org/reference/mod_abstraction_setup.html","id":"module-ui-functions","dir":"Reference","previous_headings":"","what":"Module UI functions","title":"Abstraction Module Selector — mod_abstraction_setup","text":"abstraction_setup_ui: tagList dropdown selector containing available abstraction modules. abstraction_instrument_ui: uiOutput containing data collection instrument UI selected chart abstraction module.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_abstraction_setup.html","id":"module-server-function","dir":"Reference","previous_headings":"","what":"Module Server function","title":"Abstraction Module Selector — mod_abstraction_setup","text":"abstraction_setup_server: Processes user selection dynamically returns uiOutputs selected abstraction module's setup data collection instrument user interfaces. returns configured abstraction module captured returned.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_abstraction_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstraction Module Selector — mod_abstraction_setup","text":"","code":"abstraction_setup_ui(id)  abstraction_instrument_ui(id)  abstraction_setup_server(id, subject_id)"},{"path":"reviewr.thewileylab.org/reference/mod_abstraction_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstraction Module Selector — mod_abstraction_setup","text":"id Module namespace subject_id reactive expression containing subject identifier","code":""},{"path":"reviewr.thewileylab.org/reference/mod_abstraction_setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Abstraction Module Selector — mod_abstraction_setup","text":"abstraction_setup_ui: tagList tagList containing selectInput allows selection available abstraction setup modules setup UI selected abstraction module. abstraction_instrument_ui: tagList tagList containing selected abstraction module's data collection instrument UI. abstraction_setup_server: reactiveValues module returns , pass reactiveValues returns user selected abstraction module.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_bigquery.html","id":null,"dir":"Reference","previous_headings":"","what":"Google BigQuery Database Module — mod_bigquery","title":"Google BigQuery Database Module — mod_bigquery","text":"module designed guide user process authenticating Google BigQuery. responsible retrieving: OAuth 2.0 authorization token list GCP projects available authenticated user list BigQuery datasets contained within available projects user visually guided authentication process. authenticated, user presented project/dataset selections configured DBI::dbConnect() object returned. module consists following components:","code":""},{"path":"reviewr.thewileylab.org/reference/mod_bigquery.html","id":"module-ui-function","dir":"Reference","previous_headings":"","what":"Module UI function","title":"Google BigQuery Database Module — mod_bigquery","text":"bigquery_setup_ui: uiOutput responsible guiding user Google OAuth 2.0 authorization flow graphically selecting Google Big Query project/dataset.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_bigquery.html","id":"module-server-function","dir":"Reference","previous_headings":"","what":"Module Server function","title":"Google BigQuery Database Module — mod_bigquery","text":"bigquery_setup_server: logic controls graphical user interface, including redirecting Google, receiving authorization code, requesting authorization token, authenticating application. Ultimately responsible returning public Google user information DBI::dbconnect() object used connect configured BigQuery database.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_bigquery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google BigQuery Database Module — mod_bigquery","text":"","code":"bigquery_setup_ui(id)  bigquery_setup_server(id, secrets_json = NULL)"},{"path":"reviewr.thewileylab.org/reference/mod_bigquery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google BigQuery Database Module — mod_bigquery","text":"id module namespace secrets_json string, containing file path Google OAuth 2.0 Client secrets JSON.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_bigquery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google BigQuery Database Module — mod_bigquery","text":"bigquery_setup_ui: tagList Google BigQuery Setup UI bigquery_setup_server: reactiveValues moduleName: string, containing module moniker. moduleType: string, module type (?) setup_ui: module setup ui function is_connected: string, module connection status. Valid statuses 'yes' ''. db_con: DBI::dbConnect object, containing user configured BigQuery connection information. user_info: list, containing public user information Google currently authenticated user.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_data_model_detection.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Model Detection Module — mod_data_model_detection","title":"Data Model Detection Module — mod_data_model_detection","text":"module interrogate user connected database, comparing known common data models determine data model version (applicable) user's database. informs rest application interpret display data stored connected database, possible. unsupported data model detected, user informed given opportunity connect different database. module consists following components:","code":""},{"path":"reviewr.thewileylab.org/reference/mod_data_model_detection.html","id":"module-ui-functions","dir":"Reference","previous_headings":"","what":"Module UI functions","title":"Data Model Detection Module — mod_data_model_detection","text":"functions return Shiny tagList containing various UI elements ReviewR application. UI components calculated data_model_detection_server function module. data_model_detection_ui: server defined uiOutput describing detected data model version. patient_chart_ui: \"Patient Chart,\" appropriate display elements based detected data model. Appears \"Chart Review\" tab ReviewR.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_data_model_detection.html","id":"module-server-function","dir":"Reference","previous_headings":"","what":"Module Server function","title":"Data Model Detection Module — mod_data_model_detection","text":"server function module responsible calculating display elements included UI functions module well returning reactiveValues object containing various objects used modules. data_model_detection_server: Contains data model detection logic calculates UI elements. Returns reactiveValues object containing variables used modules.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_data_model_detection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Model Detection Module — mod_data_model_detection","text":"","code":"data_model_detection_ui(id)  patient_chart_ui(id)  data_model_detection_server(id, database_vars, navigation_vars, parent_session)"},{"path":"reviewr.thewileylab.org/reference/mod_data_model_detection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Model Detection Module — mod_data_model_detection","text":"id Module namespace database_vars reactiveValues object returned mod_database_setup. navigation_vars reactiveValues object returned mod_navigation. parent_session session information parent environment module.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_data_model_detection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Model Detection Module — mod_data_model_detection","text":"data_model_detection_ui: tagList uiOutput describing detected data model version. patient_chart_ui: tagList \"Patient Chart\" \"Chart Review\" tab ReviewR. data_model_detection_server: reactiveValues table_map: tibble containing mapping CDM standard tables fields user connected tables fields. message: character vector containing message describing detected data model version. table_functions: tibble containing table function names detected data model well table names functions create. all_patients_table: tibble containing \"Patients\" function table name. Used render \"Patients\" table \"Patient Search\" tab. subject_tables: tibble containing \"Subject Specific\" functions table names. Used render patient chart tabsets \"Chart Review\" tab.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_database_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Database Module Selector — mod_database_setup","title":"Database Module Selector — mod_database_setup","text":"module allows user select available ReviewR database module dropdown list. dynamically returns database setup UI user configured database connection information selected module. See vignette(\"customize_support_new_rdbms\", package = \"ReviewR\") information database modules add support additional databases. module consists following components:","code":""},{"path":"reviewr.thewileylab.org/reference/mod_database_setup.html","id":"module-ui-function","dir":"Reference","previous_headings":"","what":"Module UI function","title":"Database Module Selector — mod_database_setup","text":"database_setup_ui: tagList dropdown selector containing available database modules.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_database_setup.html","id":"module-server-function","dir":"Reference","previous_headings":"","what":"Module Server function","title":"Database Module Selector — mod_database_setup","text":"database_setup_server: Processes user selection dynamically returns uiOutput selected database module's setup UI. returns configured database connection module captured returned.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_database_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Database Module Selector — mod_database_setup","text":"","code":"database_setup_ui(id)  database_setup_server(id)"},{"path":"reviewr.thewileylab.org/reference/mod_database_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Database Module Selector — mod_database_setup","text":"id Module namespace","code":""},{"path":"reviewr.thewileylab.org/reference/mod_database_setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Database Module Selector — mod_database_setup","text":"database_setup_ui: tagList tagList containing selectInput allows selection available database setup modules setup UI selected database module. database_setup_server: reactiveValues module returns , pass reactiveValues returns user selected database module.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_demo_sqlite.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo SQLite Database Module — mod_demo_sqlite","title":"Demo SQLite Database Module — mod_demo_sqlite","text":"module create memory SQLite database demo data CMS 2008-2010 Data Entrepreneurs’ Synthetic Public Use File (DE-SynPUF) OHDSI. allow preview functionality ReviewR access database patient information. module consists following components:","code":""},{"path":"reviewr.thewileylab.org/reference/mod_demo_sqlite.html","id":"module-ui-function","dir":"Reference","previous_headings":"","what":"Module UI function","title":"Demo SQLite Database Module — mod_demo_sqlite","text":"demo_sqlite_setup_ui: uiOutput allows users connect demonstration database.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_demo_sqlite.html","id":"module-server-function","dir":"Reference","previous_headings":"","what":"Module Server function","title":"Demo SQLite Database Module — mod_demo_sqlite","text":"demo_sqlite_setup_server: logic creates demonstration SQLite database returns DBI::dbConnect() object used connect demo database.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_demo_sqlite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demo SQLite Database Module — mod_demo_sqlite","text":"","code":"demo_sqlite_setup_ui(id)  demo_sqlite_setup_server(id)"},{"path":"reviewr.thewileylab.org/reference/mod_demo_sqlite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Demo SQLite Database Module — mod_demo_sqlite","text":"id module namespace","code":""},{"path":"reviewr.thewileylab.org/reference/mod_demo_sqlite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Demo SQLite Database Module — mod_demo_sqlite","text":"demo_sqlite_setup_ui: tagList Demo SQLite Setup UI demo_sqlite_setup_server: reactiveValues moduleName: string, containing module moniker. moduleType: string, module type (?) setup_ui: module setup ui function is_connected: string, module connection status. Valid statuses 'yes' ''. db_con: DBI::dbConnect object, containing user configured connection information.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_layout_chartreview.html","id":null,"dir":"Reference","previous_headings":"","what":"Chart Review Interface Module — mod_layout_chartreview","title":"Chart Review Interface Module — mod_layout_chartreview","text":"module determines \"View\" \"Review\" interface needed based presence absence configured abstraction module. abstraction module configured \"Setup\" tab ReviewR, column created right patient chart abstraction data collection instrument. Otherwise, patient chart take full view. module consists following components:","code":""},{"path":"reviewr.thewileylab.org/reference/mod_layout_chartreview.html","id":"module-ui-function","dir":"Reference","previous_headings":"","what":"Module UI function","title":"Chart Review Interface Module — mod_layout_chartreview","text":"chartreview_ui: uiOutput containing View Review interface","code":""},{"path":"reviewr.thewileylab.org/reference/mod_layout_chartreview.html","id":"module-server-function","dir":"Reference","previous_headings":"","what":"Module Server function","title":"Chart Review Interface Module — mod_layout_chartreview","text":"chartreview_server: logic controls layout \"Chart Review\" tab ReviewR. \"View\" abstraction module configured. \"Review\" abstraction module configured.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_layout_chartreview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chart Review Interface Module — mod_layout_chartreview","text":"","code":"chartreview_ui(id)  chartreview_server(id, database_vars, abstract_vars)"},{"path":"reviewr.thewileylab.org/reference/mod_layout_chartreview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chart Review Interface Module — mod_layout_chartreview","text":"id module namespace database_vars reactiveValues object returned mod_database_setup. abstract_vars reactiveValues object returned mod_abstraction_setup.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_layout_chartreview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chart Review Interface Module — mod_layout_chartreview","text":"chartreview_ui: tagList Chart Review UI chartreview_server: NULL function return, creating UI output UI function module.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_navigation.html","id":null,"dir":"Reference","previous_headings":"","what":"Patient Navigation Module — mod_navigation","title":"Patient Navigation Module — mod_navigation","text":"module render \"patients\" dataTable (DT) located 'Patient Search' tab ReviewR display demographic information subjects connected database. subject id selections made tab extracted passed ReviewR modules. selections made using DT navigation buttons 'Chart Review' tab, selected patient DT kept sync module. Additionally, demographic (optionally) abstraction status information selected patient extracted placed header 'Chart Review' tab. module consists following components:","code":""},{"path":"reviewr.thewileylab.org/reference/mod_navigation.html","id":"module-ui-functions","dir":"Reference","previous_headings":"","what":"Module UI functions","title":"Patient Navigation Module — mod_navigation","text":"navigation_message: uiOutput display placeholder message database connected. all_patient_search_dt: uiOutput containing \"patients\" dataTable patient demographic information connected database. chart_review_subject_info: uiOutput containing selected subject's demographic information display 'Chart Review' tab. chart_review_navigation: uiOutput containing \"Jump Subject ID' dropdown previous next buttons used navigate patient data 'Chart Review' tab.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_navigation.html","id":"module-server-function","dir":"Reference","previous_headings":"","what":"Module Server function","title":"Patient Navigation Module — mod_navigation","text":"navigation_server: Provides logic associated displaying patient demographic information, selecting patient review, navigating connected patient database. Returns user selected patient information use modules.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_navigation.html","id":"keyboard-shortcuts","dir":"Reference","previous_headings":"","what":"Keyboard Shortcuts","title":"Patient Navigation Module — mod_navigation","text":"module also provides keyboard shortcuts assist navigating patient data. \"meta\" key refers \"ctrl\" Windows \"Cmd\" Mac. Next Patient: “alt + meta + >” Prev Patient: “alt + meta + <”","code":""},{"path":"reviewr.thewileylab.org/reference/mod_navigation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Patient Navigation Module — mod_navigation","text":"","code":"navigation_message(id)  all_patient_search_dt(id)  chart_review_subject_info(id)  chart_review_navigation(id)  navigation_server(   id,   database_vars,   data_model_vars,   abstract_vars,   parent_session )"},{"path":"reviewr.thewileylab.org/reference/mod_navigation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Patient Navigation Module — mod_navigation","text":"id Module namespace database_vars reactiveValues object returned mod_database_setup. data_model_vars reactiveValues object returned mod_data_model_detection. abstract_vars reactiveValues object returned mod_abstraction_setup. parent_session session information parent environment module.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_navigation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Patient Navigation Module — mod_navigation","text":"navigation_message: tagList uiOutput display placeholder message database connected. all_patient_search_dt: tagList uiOutput containing \"patients\" dataTable patient demographic information connected database. chart_review_subject_info: tagList uiOutput containing selected subject's demographic information display 'Chart Review' tab. chart_review_navigation: tagList uiOutput containing \"Jump Subject ID' dropdown previous next buttons used navigate patient data 'Chart Review' tab. navigation_server: reactiveValues selected_subject_id: character representing currently selected subject currently connected database. selected_subject_info: dplyr::tibble containing demographic information selected subject. selected_subject_status: character containing abstraction status selected subject, abstraction module configured abstraction data present.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_postgres.html","id":null,"dir":"Reference","previous_headings":"","what":"PostgreSQL Database Module — mod_postgres","title":"PostgreSQL Database Module — mod_postgres","text":"module designed guide user process authenticating PostgreSQL database. user visually prompted typical PostgreSQL connection parameters. User entered information verified authenticated, DBI::dbConnect() object returned. module consists following components:","code":""},{"path":"reviewr.thewileylab.org/reference/mod_postgres.html","id":"module-ui-function","dir":"Reference","previous_headings":"","what":"Module UI function","title":"PostgreSQL Database Module — mod_postgres","text":"postgresql_setup_ui: uiOutput allows users connect provide connection parameters required connect PostgreSQL database.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_postgres.html","id":"module-server-function","dir":"Reference","previous_headings":"","what":"Module Server function","title":"PostgreSQL Database Module — mod_postgres","text":"postgresql_setup_server: logic controls graphical user interface, validates user inputs, returns DBI::dbconnect() object used connect desired PostgreSQL database.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_postgres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PostgreSQL Database Module — mod_postgres","text":"","code":"postgresql_setup_ui(id)  postgresql_setup_server(id)"},{"path":"reviewr.thewileylab.org/reference/mod_postgres.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PostgreSQL Database Module — mod_postgres","text":"id module namespace","code":""},{"path":"reviewr.thewileylab.org/reference/mod_postgres.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PostgreSQL Database Module — mod_postgres","text":"postgresql_setup_ui: tagList shinyPostgreSQL Setup UI postgresql_setup_server: reactiveValues moduleName: string, containing module moniker. moduleType: string, module type (?) setup_ui: module setup ui function is_connected: string, module connection status. Valid statuses 'yes' ''. db_con: DBI::dbConnect object, containing user configured PostgreSQL connection information.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_redcap.html","id":null,"dir":"Reference","previous_headings":"","what":"REDCap Abstraction Module — mod_redcap","title":"REDCap Abstraction Module — mod_redcap","text":"module allows users interact REDCap Projects within Shiny application. REDCap instruments translated native Shiny controls/widgets allow capture abstracted information within R Shiny environment. Additionally, error prone fields MRN reviewer information populated automatically, based user configured information, thus reducing potential error abstracted information. module consists following components:","code":""},{"path":"reviewr.thewileylab.org/reference/mod_redcap.html","id":"module-ui-functions","dir":"Reference","previous_headings":"","what":"Module UI functions","title":"REDCap Abstraction Module — mod_redcap","text":"redcap_setup_ui: REDCap setup/configuration UI redcap_instrument_ui: shiny representation REDCap Instrument","code":""},{"path":"reviewr.thewileylab.org/reference/mod_redcap.html","id":"module-server-function","dir":"Reference","previous_headings":"","what":"Module Server function","title":"REDCap Abstraction Module — mod_redcap","text":"redcap_server: logic","code":""},{"path":"reviewr.thewileylab.org/reference/mod_redcap.html","id":"keyboard-shortcuts","dir":"Reference","previous_headings":"","what":"Keyboard Shortcuts","title":"REDCap Abstraction Module — mod_redcap","text":"module also provides keyboard shortcut assist saving abstracted patient data. \"meta\" key refers \"ctrl\" Windows \"Cmd\" Mac. Save current instrument data: “alt + meta + s”","code":""},{"path":"reviewr.thewileylab.org/reference/mod_redcap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"REDCap Abstraction Module — mod_redcap","text":"","code":"redcap_setup_ui(id)  redcap_instrument_ui(id)  redcap_server(id, subject_id)"},{"path":"reviewr.thewileylab.org/reference/mod_redcap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"REDCap Abstraction Module — mod_redcap","text":"id module namespace subject_id shiny::reactive expression containing subject identifier.","code":""},{"path":"reviewr.thewileylab.org/reference/mod_redcap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"REDCap Abstraction Module — mod_redcap","text":"redcap_setup_ui: tagList REDCap setup/configuration UI redcap_instrument_ui: tagList shiny representation REDCap Instrument redcap_server: reactiveValues all_review_status: dplyr::tibble containing review status previously reviewed individuals. instrument_ui: module instrument ui function is_configured: string, module configuration status. Valid statuses yes' ''. is_connected: string, module connection status. Valid statuses 'yes' ''. moduleName: string, containing module moniker. moduleType: string, module type (?) previous_selected_instrument_complete_val: character (\"1\",\"2\",\"3\", NA_character) representing REDCap review status. setup_ui: module setup ui function","code":""},{"path":"reviewr.thewileylab.org/reference/omop_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"OMOP Tables — omop_tables","title":"OMOP Tables — omop_tables","text":"Collection functions create prearranged views OMOP patient data supplied database connection information mapping connected database.","code":""},{"path":"reviewr.thewileylab.org/reference/omop_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OMOP Tables — omop_tables","text":"","code":"omop_table_all_patients(table_map, db_connection)  omop_table_condition_era(table_map, db_connection, subject_id)  omop_table_condition_occurrence(table_map, db_connection, subject_id)  omop_table_death(table_map, db_connection, subject_id)  omop_table_device_exposure(table_map, db_connection, subject_id)  omop_table_dose_era(table_map, db_connection, subject_id)  omop_table_drug_era(table_map, db_connection, subject_id)  omop_table_drug_exposure(table_map, db_connection, subject_id)  omop_table_measurement(table_map, db_connection, subject_id)  omop_table_note(table_map, db_connection, subject_id)  omop_table_observation(table_map, db_connection, subject_id)  omop_table_observation_period(table_map, db_connection, subject_id)  omop_table_payer_plan_period(table_map, db_connection, subject_id)  omop_table_procedure_occurrence(table_map, db_connection, subject_id)  omop_table_specimen(table_map, db_connection, subject_id)  omop_table_visit_occurrence(table_map, db_connection, subject_id)"},{"path":"reviewr.thewileylab.org/reference/omop_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OMOP Tables — omop_tables","text":"table_map dplyr::tibble containing mapping CDM standard tables fields user connected tables fields. db_connection DBI::dbConnect object subject_id numeric, coercible numeric.","code":""},{"path":"reviewr.thewileylab.org/reference/omop_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OMOP Tables — omop_tables","text":"dplyr::tibble containing pre-coordinated patient information connected database.","code":""},{"path":"reviewr.thewileylab.org/reference/patient_search.html","id":null,"dir":"Reference","previous_headings":"","what":"ReviewR Patient Search Tab — patient_search","title":"ReviewR Patient Search Tab — patient_search","text":"function contains elements control layout Patient Search Tab.","code":""},{"path":"reviewr.thewileylab.org/reference/patient_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ReviewR Patient Search Tab — patient_search","text":"","code":"patient_search()"},{"path":"reviewr.thewileylab.org/reference/patient_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ReviewR Patient Search Tab — patient_search","text":"shiny::renderUI Output containing Patient Search Tab","code":""},{"path":[]},{"path":[]},{"path":"reviewr.thewileylab.org/reference/redcap_connection.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"REDCap Connection — redcap_connection","text":"'safe' wrapper redcapAPI::redcapConnection(). return diagnostic error codes case incorrect URL token provided instead failing outright.","code":""},{"path":"reviewr.thewileylab.org/reference/redcap_connection.html","id":"redcap-api-security","dir":"Reference","previous_headings":"","what":"REDCap API Security","title":"REDCap Connection — redcap_connection","text":"good practice ensure SSL certs validated utilizing REDCap API. ensure happens, set CURLOPT_SSL_VERIFYPEER' option TRUE avoid potential man middle attacks. redcapAPI package utilizes httr package perform operations using REDCap API. Configuration options can passed directly httr via config option redcapAPI::redcapConnection function. , set 'ssl_verifypeer = 1L' ensure cert checking enabled. https://search.r-project.org/CRAN/refmans/redcapAPI/html/redcapConnection.html https://httr.r-lib.org/reference/httr_options.html","code":""},{"path":"reviewr.thewileylab.org/reference/redcap_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"REDCap Connection — redcap_connection","text":"","code":"redcap_connection(url, token)"},{"path":"reviewr.thewileylab.org/reference/redcap_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"REDCap Connection — redcap_connection","text":"url string containing https URL institution's REDCap API. token string containing API token REDCap project.","code":""},{"path":"reviewr.thewileylab.org/reference/redcap_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"REDCap Connection — redcap_connection","text":"redcapAPI connection object URL API token correct ( See: redcapAPI::redcapConnection ). Else, return diagnostic error.","code":""},{"path":"reviewr.thewileylab.org/reference/redcap_survey_complete.html","id":null,"dir":"Reference","previous_headings":"","what":"REDCap Survey Complete — redcap_survey_complete","title":"REDCap Survey Complete — redcap_survey_complete","text":"dataset containing valid REDCap \"Survey Complete\" Values.","code":""},{"path":"reviewr.thewileylab.org/reference/redcap_survey_complete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"REDCap Survey Complete — redcap_survey_complete","text":"","code":"redcap_survey_complete"},{"path":"reviewr.thewileylab.org/reference/redcap_survey_complete.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"REDCap Survey Complete — redcap_survey_complete","text":"data frame 2 rows 2 variables: redcap_survey_complete_names human readable \"Survey Complete\" Responses redcap_survey_complete_values REDCap API values \"Survey Complete\" Responses","code":""},{"path":"reviewr.thewileylab.org/reference/redcap_widget_map.html","id":null,"dir":"Reference","previous_headings":"","what":"REDCap Widget Map — redcap_widget_map","title":"REDCap Widget Map — redcap_widget_map","text":"dataset maps REDCap question types common validations native shiny widgets custom functions.","code":""},{"path":"reviewr.thewileylab.org/reference/redcap_widget_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"REDCap Widget Map — redcap_widget_map","text":"","code":"redcap_widget_map"},{"path":"reviewr.thewileylab.org/reference/redcap_widget_map.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"REDCap Widget Map — redcap_widget_map","text":"data frame 9 rows 3 variables: redcap_field_type REDCap Question Type redcap_field_validation Custom REDCap Question Type Validation shinyREDCap_widget_function shinyREDCap function use mapping native Shiny widget","code":""},{"path":"reviewr.thewileylab.org/reference/render_redcap_instrument.html","id":null,"dir":"Reference","previous_headings":"","what":"Render REDCap Instrument — render_redcap_instrument","title":"Render REDCap Instrument — render_redcap_instrument","text":"function select appropriate shiny widget translation function based provided parameters. Used loop REDCap project information create entire data collection instrument may consist multiple questions/question types.","code":""},{"path":"reviewr.thewileylab.org/reference/render_redcap_instrument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render REDCap Instrument — render_redcap_instrument","text":"","code":"render_redcap_instrument(   shinyREDCap_type,   id,   field_label,   required,   choices,   current_subject_data = NULL,   ... )"},{"path":"reviewr.thewileylab.org/reference/render_redcap_instrument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render REDCap Instrument — render_redcap_instrument","text":"shinyREDCap_type string indicating supported shinyREDCap question type. Valid options include: \"shinyREDCap_text\", \"shinyREDCap_date\", \"shinyREDCap_dropdown\", \"shinyREDCap_truefalse\", \"shinyREDCap_yesno\", \"shinyREDCap_radio\", \"shinyREDCap_checkbox\", \"shinyREDCap_notes\", \"shinyREDCap_integer\" id string, containing globally unique REDCap question identifier. Used create valid Shiny inputID. field_label string containing question asked. May contain html formatting. required string, \"yes\" \"\". required REDCap question type? choices REDCap choices question. current_subject_data Previously saved REDCap data current subject. ... additional parameters pass shiny widget inputs.","code":""},{"path":"reviewr.thewileylab.org/reference/render_redcap_instrument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render REDCap Instrument — render_redcap_instrument","text":"shiny input widget UI","code":""},{"path":"reviewr.thewileylab.org/reference/reviewr_datatable.html","id":null,"dir":"Reference","previous_headings":"","what":"ReviewR DataTable — reviewr_datatable","title":"ReviewR DataTable — reviewr_datatable","text":"wrapper function around DT::datatable applies common extensions, options default values used throughout ReviewR application.","code":""},{"path":"reviewr.thewileylab.org/reference/reviewr_datatable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ReviewR DataTable — reviewr_datatable","text":"","code":"reviewr_datatable(.data, dom = \"ftip\", column_filter = \"top\", search_term = \"\")"},{"path":"reviewr.thewileylab.org/reference/reviewr_datatable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReviewR DataTable — reviewr_datatable","text":".data local tibble data frame rendered ReviewR UI dom Define table control elements appear page order. See: https://datatables.net/reference/option/dom column_filter display individual column filters. Valid entries : 'top','bottom','none' search_term string regular expression used filter patient data","code":""},{"path":"reviewr.thewileylab.org/reference/reviewr_datatable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ReviewR DataTable — reviewr_datatable","text":"DT::datatable","code":""},{"path":"reviewr.thewileylab.org/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Application — run_app","title":"Run Application — run_app","text":"Start ReviewR Application browser port 1410.","code":"__________            .__              __________   \\______   \\ _______  _|__| ______  _  _\\______   \\   |       _// __ \\  \\/ /  |/ __ \\ \\/ \\/ /|       _/   |    |   \\  ___/\\   /|  \\  ___/\\     / |    |   \\   |____|_  /\\___  >\\_/ |__|\\___  >\\/\\_/  |____|_  /          \\/     \\/             \\/               \\/                                        by WileyLab  Making manual record review fun since 2019!  authors:  Laura Wiley, Luke Rasmussen, David Mayer"},{"path":"reviewr.thewileylab.org/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Application — run_app","text":"","code":"run_app(...)"},{"path":"reviewr.thewileylab.org/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Application — run_app","text":"... list options pass app including: secrets_json: string, containing file path Google OAuth 2.0 Client ID JSON","code":""},{"path":"reviewr.thewileylab.org/reference/run_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Application — run_app","text":"return value, called start ReviewR Shiny Application!","code":""},{"path":"reviewr.thewileylab.org/reference/safe_exportRecords.html","id":null,"dir":"Reference","previous_headings":"","what":"REDCap Safe Export Records — safe_exportRecords","title":"REDCap Safe Export Records — safe_exportRecords","text":"safe wrapper around redcapAPI::exportRecords fail records requested empty REDCap project. event empty project, field names used create empty data structure.","code":""},{"path":"reviewr.thewileylab.org/reference/safe_exportRecords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"REDCap Safe Export Records — safe_exportRecords","text":"","code":"safe_exportRecords(rc_con, rc_field_names)"},{"path":"reviewr.thewileylab.org/reference/safe_exportRecords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"REDCap Safe Export Records — safe_exportRecords","text":"rc_con REDCap API Connection Object rc_field_names field names REDCap instrument","code":""},{"path":"reviewr.thewileylab.org/reference/safe_exportRecords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"REDCap Safe Export Records — safe_exportRecords","text":"data frame containing existing REDCap records, empty data frame structure records look like.","code":""},{"path":"reviewr.thewileylab.org/reference/safe_file.exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe File Exists — safe_file.exists","title":"Safe File Exists — safe_file.exists","text":"\"safe\" wrapper around base::file.exists returns FALSE file path supplied argument, instead error.","code":""},{"path":"reviewr.thewileylab.org/reference/safe_file.exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe File Exists — safe_file.exists","text":"","code":"safe_file.exists(...)"},{"path":"reviewr.thewileylab.org/reference/safe_file.exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe File Exists — safe_file.exists","text":"... character vectors, containing file names paths","code":""},{"path":"reviewr.thewileylab.org/reference/safe_file.exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safe File Exists — safe_file.exists","text":"Logical, true/false file path provided NULL supplied input.","code":""},{"path":"reviewr.thewileylab.org/reference/setup.html","id":null,"dir":"Reference","previous_headings":"","what":"ReviewR Setup Tab — setup","title":"ReviewR Setup Tab — setup","text":"function contains elements control layout Setup Tab.","code":""},{"path":"reviewr.thewileylab.org/reference/setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ReviewR Setup Tab — setup","text":"","code":"setup()"},{"path":"reviewr.thewileylab.org/reference/setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ReviewR Setup Tab — setup","text":"shiny::renderUI Output containing Setup Tab","code":""},{"path":[]},{"path":"reviewr.thewileylab.org/reference/shiny_widget_translation.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny Widget Translation — shiny_widget_translation","title":"Shiny Widget Translation — shiny_widget_translation","text":"collection functions map REDCap question types exported REDCap API native Shiny widgets.","code":""},{"path":"reviewr.thewileylab.org/reference/shiny_widget_translation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny Widget Translation — shiny_widget_translation","text":"","code":"shinyREDCap_textInput(id, field_label, value = NULL, placeholder = NULL, ...)  shinyREDCap_dateInput(id, field_label, value = NULL, ...)  shinyREDCap_dropdown(id, field_label, required, choices, value = NULL, ...)  shinyREDCap_truefalse(id, field_label, required, value = NULL, ...)  shinyREDCap_yesno(id, field_label, required, value = NULL, ...)  shinyREDCap_radio(id, field_label, required, choices, value = NULL, ...)  shinyREDCap_checkbox(id, field_label, choices, value = NULL, ...)  shinyREDCap_notes(id, field_label, value = NULL, ...)  shinyREDCap_integer(id, field_label, value = NULL, ...)"},{"path":"reviewr.thewileylab.org/reference/shiny_widget_translation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny Widget Translation — shiny_widget_translation","text":"id string, containing globally unique REDCap question identifier. Used create valid Shiny inputID. field_label string containing question asked. May contain html formatting. value Default value previous data question previously answered placeholder Placeholder text help reviewer decide answer question ... additional parameters pass shiny widget inputs. required string, \"yes\" \"\". required REDCap question type? choices REDCap choices question.","code":""},{"path":"reviewr.thewileylab.org/reference/shiny_widget_translation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny Widget Translation — shiny_widget_translation","text":"shiny input widget UI","code":""},{"path":"reviewr.thewileylab.org/reference/supported_data_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Supported Data Model Schemas — supported_data_models","title":"Supported Data Model Schemas — supported_data_models","text":"dataset containing data model information along corresponding version nested schema information.","code":""},{"path":"reviewr.thewileylab.org/reference/supported_data_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supported Data Model Schemas — supported_data_models","text":"","code":"supported_data_models"},{"path":"reviewr.thewileylab.org/reference/supported_data_models.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Supported Data Model Schemas — supported_data_models","text":"data frame 12 rows 4 variables: data_model Data model name model_version Version data model data Nested database schemas, including included table field mappings file_path schema imported ","code":""},{"path":"reviewr.thewileylab.org/reference/supported_data_models.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Supported Data Model Schemas — supported_data_models","text":"https://github.com/OHDSI/CommonDataModel/ https://github.com/MIT-LCP/mimic-code","code":""},{"path":[]},{"path":"reviewr.thewileylab.org/reference/synPUF.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"synPUF — synPUF","text":"dataset contains 10 person subset CMS 2008-2010 Data Entrepreneurs’ Synthetic Public Use File (DE-SynPUF) OHDSI.","code":""},{"path":"reviewr.thewileylab.org/reference/synPUF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"synPUF — synPUF","text":"Information SynPUF data source available CDM 5.2.2 DDL OHDSI supported DBMSs available Notes Obtained MTSamples.com","code":""},{"path":"reviewr.thewileylab.org/reference/synPUF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"synPUF — synPUF","text":"","code":"synPUF"},{"path":"reviewr.thewileylab.org/reference/synPUF.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"synPUF — synPUF","text":"data frame 23 rows 2 variables: table_name character: table name OMOP v5.2.2 table_data list: table data, OMOP v5.2.2","code":""},{"path":"reviewr.thewileylab.org/reference/synPUF.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"synPUF — synPUF","text":"https://github.com/thewileylab/synPUF/releases/tag/0.0.1.10 https://www.cms.gov/Research-Statistics-Data--Systems/Downloadable-Public-Use-Files/SynPUFs/DE_Syn_PUF https://github.com/OHDSI/CommonDataModel/blob/v5.2.2/PostgreSQL/OMOP%20CDM%20ddl%20-%20PostgreSQL.sql https://www.mtsamples.com/","code":""},{"path":"reviewr.thewileylab.org/reference/user_field.html","id":null,"dir":"Reference","previous_headings":"","what":"user_field — user_field","title":"user_field — user_field","text":"user_field","code":""},{"path":"reviewr.thewileylab.org/reference/user_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"user_field — user_field","text":"","code":"user_field(table_map, desired_cdm_table, desired_cdm_field)"},{"path":"reviewr.thewileylab.org/reference/user_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"user_field — user_field","text":"table_map dplyr::tibble, generated mod_data_model_detection containing user database tables fields mapped determined CDM. desired_cdm_table string containing table name desired CDM. desired_cdm_field string containing field name desired CDM.","code":""},{"path":"reviewr.thewileylab.org/reference/user_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"user_field — user_field","text":"string containing user database field pertaining standard data model field","code":""},{"path":"reviewr.thewileylab.org/reference/user_table.html","id":null,"dir":"Reference","previous_headings":"","what":"user_table — user_table","title":"user_table — user_table","text":"user_table","code":""},{"path":"reviewr.thewileylab.org/reference/user_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"user_table — user_table","text":"","code":"user_table(table_map, db_con, desired_cdm_table)"},{"path":"reviewr.thewileylab.org/reference/user_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"user_table — user_table","text":"table_map dplyr::tibble, generated mod_data_model_detection containing user database tables fields mapped determined CDM. db_con DBI::dbConnect object created user interaction Setup Tab desired_cdm_table string containing table name desired CDM.","code":""},{"path":"reviewr.thewileylab.org/reference/user_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"user_table — user_table","text":"SQL data source dplyr::tbl, ie. tbl(db_con, user_table), connects user table corresponds standard data model table.","code":""},{"path":[]},{"path":"reviewr.thewileylab.org/news/index.html","id":"fixes-2-3-9","dir":"Changelog","previous_headings":"","what":"Fixes","title":"ReviewR 2.3.9","text":"Address Rd issue package overview help file","code":""},{"path":"reviewr.thewileylab.org/news/index.html","id":"misc-updates-2-3-9","dir":"Changelog","previous_headings":"","what":"Misc Updates","title":"ReviewR 2.3.9","text":"Update CITATION Remove dashboardthemes dependency Refresh vignettes updated update Dockerfile(s)","code":""},{"path":"reviewr.thewileylab.org/news/index.html","id":"reviewr-238","dir":"Changelog","previous_headings":"","what":"ReviewR 2.3.8","title":"ReviewR 2.3.8","text":"CRAN release: 2022-05-18","code":""},{"path":"reviewr.thewileylab.org/news/index.html","id":"fixes-2-3-8","dir":"Changelog","previous_headings":"","what":"Fixes","title":"ReviewR 2.3.8","text":"Address Rd issue mod_layout_chartreview()","code":""},{"path":"reviewr.thewileylab.org/news/index.html","id":"misc-updates-2-3-8","dir":"Changelog","previous_headings":"","what":"Misc Updates","title":"ReviewR 2.3.8","text":"minor version bump move pkgload suggests use latest roxygen update Dockerfile add package CITATION","code":""},{"path":"reviewr.thewileylab.org/news/index.html","id":"reviewr-237","dir":"Changelog","previous_headings":"","what":"ReviewR 2.3.7","title":"ReviewR 2.3.7","text":"CRAN release: 2021-09-02","code":""},{"path":"reviewr.thewileylab.org/news/index.html","id":"fixes-2-3-7","dir":"Changelog","previous_headings":"","what":"Fixes","title":"ReviewR 2.3.7","text":"Fixes template issue development function (#24) Updated demo database","code":""},{"path":"reviewr.thewileylab.org/news/index.html","id":"reviewr-236","dir":"Changelog","previous_headings":"","what":"ReviewR 2.3.6","title":"ReviewR 2.3.6","text":"CRAN release: 2021-04-02","code":""},{"path":"reviewr.thewileylab.org/news/index.html","id":"features-2-3-6","dir":"Changelog","previous_headings":"","what":"Features","title":"ReviewR 2.3.6","text":"Perform manual record review patient data stored BigQuery Postgres databases. Store abstracted patient data REDCap native R Shiny controls.","code":""},{"path":"reviewr.thewileylab.org/news/index.html","id":"enhancements-2-3-6","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"ReviewR 2.3.6","text":"Added NEWS.md file track changes package.","code":""}]
